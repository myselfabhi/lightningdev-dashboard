diff --git a/lightningdev-dashboard/package-lock.json b/lightningdev-dashboard/package-lock.json
index f71b570..0c3c79e 100644
--- a/lightningdev-dashboard/package-lock.json
+++ b/lightningdev-dashboard/package-lock.json
@@ -13,6 +13,7 @@
         "bootstrap": "^5.3.3",
         "lucide-react": "^0.468.0",
         "next": "15.0.3",
+        "prettier": "^3.4.2",
         "rc-progress": "^4.0.0",
         "react": "^18.2.0",
         "react-dom": "^18.2.0",
@@ -4035,6 +4036,21 @@
         "node": ">= 0.8.0"
       }
     },
+    "node_modules/prettier": {
+      "version": "3.4.2",
+      "resolved": "https://registry.npmjs.org/prettier/-/prettier-3.4.2.tgz",
+      "integrity": "sha512-e9MewbtFo+Fevyuxn/4rrcDAaq0IYxPGLvObpQjiZBMAzB9IGmzlnG9RZy3FFas+eBMu2vA0CszMeduow5dIuQ==",
+      "license": "MIT",
+      "bin": {
+        "prettier": "bin/prettier.cjs"
+      },
+      "engines": {
+        "node": ">=14"
+      },
+      "funding": {
+        "url": "https://github.com/prettier/prettier?sponsor=1"
+      }
+    },
     "node_modules/prop-types": {
       "version": "15.8.1",
       "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
diff --git a/lightningdev-dashboard/package.json b/lightningdev-dashboard/package.json
index a2a130b..bd4f22f 100644
--- a/lightningdev-dashboard/package.json
+++ b/lightningdev-dashboard/package.json
@@ -6,7 +6,8 @@
     "dev": "next dev --turbopack",
     "build": "next build",
     "start": "next start",
-    "lint": "next lint"
+    "lint": "next lint",
+    "pretty": "prettier --write ."
   },
   "dependencies": {
     "@fortawesome/fontawesome-free": "^6.7.1",
@@ -14,9 +15,10 @@
     "bootstrap": "^5.3.3",
     "lucide-react": "^0.468.0",
     "next": "15.0.3",
+    "prettier": "^3.4.2",
     "rc-progress": "^4.0.0",
-  "react": "^18.2.0",
-  "react-dom": "^18.2.0",
+    "react": "^18.2.0",
+    "react-dom": "^18.2.0",
     "react-hot-toast": "^2.4.1",
     "react-icons": "^5.3.0"
   },
diff --git a/lightningdev-dashboard/src/bootstrap.d.ts b/lightningdev-dashboard/src/bootstrap.d.ts
index f459be4..054c242 100644
--- a/lightningdev-dashboard/src/bootstrap.d.ts
+++ b/lightningdev-dashboard/src/bootstrap.d.ts
@@ -1 +1 @@
-declare module 'bootstrap/dist/js/bootstrap.bundle.min.js';
+declare module "bootstrap/dist/js/bootstrap.bundle.min.js";
diff --git a/lightningdev-dashboard/src/components/CardsSection/CardsSection.tsx b/lightningdev-dashboard/src/components/CardsSection/CardsSection.tsx
index c895f4d..ddeaf07 100644
--- a/lightningdev-dashboard/src/components/CardsSection/CardsSection.tsx
+++ b/lightningdev-dashboard/src/components/CardsSection/CardsSection.tsx
@@ -9,7 +9,7 @@ import {
   FaInfoCircle,
   FaTrash,
 } from "react-icons/fa";
-import "./cardssection.css";
+import "./CardsSection.module.css";
 
 type CardsSectionProps = {
   addBalance: () => Promise<void>;
@@ -60,10 +60,7 @@ const CardsSection: React.FC<CardsSectionProps> = ({
             </div>
             <h5 className="card-title">Active Balance</h5>
             <h4 className="card-value">${balance.toFixed(2)}</h4>
-            <button
-              className="btn btn-outline-success  "
-              onClick={addBalance}
-            >
+            <button className="btn btn-outline-success  " onClick={addBalance}>
               Add Balance
             </button>
             <hr />
@@ -79,10 +76,7 @@ const CardsSection: React.FC<CardsSectionProps> = ({
             </div>
             <h5 className="card-title">Active Plans</h5>
             <h4 className="card-value">{activePlans}</h4>
-            <button
-              className="btn btn-outline-primary"
-              onClick={renewPlan}
-            >
+            <button className="btn btn-outline-primary" onClick={renewPlan}>
               Purchase Plan
             </button>
             <hr />
diff --git a/lightningdev-dashboard/src/components/CardsSection/cardssection.css b/lightningdev-dashboard/src/components/CardsSection/cardssection.css
deleted file mode 100644
index f600b58..0000000
--- a/lightningdev-dashboard/src/components/CardsSection/cardssection.css
+++ /dev/null
@@ -1,147 +0,0 @@
-.cards-section {
-  margin-top: 20px;
-}
-
-.card.custom-card {
-  border-radius: 10px;
-  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
-  padding: 20px;
-  height: 100%;
-  background-color: #ffffff;
-}
-
-.card-title {
-  font-size: 16px;
-  font-weight: bold;
-  color: #333333;
-  margin-bottom: 10px;
-}
-
-.card-value {
-  font-size: 24px;
-  font-weight: bold;
-  margin-bottom: 10px;
-}
-
-.icon-style {
-  width: 50px;
-  height: 50px;
-  background-color: #1a73e8;
-  color: #ffffff;
-  border-radius: 50%;
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  font-size: 20px;
-  margin-bottom: 15px;
-}
-
-.icon-style-2 {
-  width: 50px;
-  height: 50px;
-  background-color: #1a73e8;
-  color: #ffffff;
-  border-radius: 50%;
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  font-size: 20px;
-  margin-bottom: 15px;
-}
-
-.icon-style-4 {
-  width: 80px;
-  height: 80px;
-  background-color: #1a73e8;
-  color: #ffffff;
-  border-radius: 50%;
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  font-size: 20px;
-  margin-bottom: 30px;
-}
-
-.progress-circle {
-  width: 60px;
-  height: 60px;
-  border-radius: 50%;
-  background-color: #f1f3f4;
-  border: 4px solid #1a73e8;
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  font-size: 14px;
-  font-weight: bold;
-  color: #1a73e8;
-}
-
-.read-more-btn {
-  font-size: 14px;
-  font-weight: 500;
-}
-
-.btn {
-  font-size: 14px;
-  font-weight: 500;
-}
-
-.btn-outline-success {
-  color: #28a745;
-  border-color: #28a745;
-}
-
-.btn-outline-success-icon {
-  color: #28a745;
-  border-color: #28a745;  
-}
-
-.btn-outline-success:hover {
-  background-color: #28a745;
-  color: #ffffff;
-}
-
-.btn-outline-success-icon:hover {
-  background-color: #28a745;
-  color: #ffffff;
-}
-
-.btn-outline-primary {
-  color: #007bff;
-  border-color: #007bff;
-}
-
-.btn-outline-primary-icon {
-  color: #007bff;
-  border-color: #007bff;
-}
-
-.btn-outline-primary-icon {
-  color: #007bff;
-  border-color: #007bff;
-}
-
-.btn-outline-primary:hover {
-  background-color: #007bff;
-  color: #ffffff;
-}
-
-.btn-outline-primary-icon:hover {
-  background-color: #007bff;
-  color: #ffffff;
-}
-
-.btn-outline-danger {
-  color: #ff4d4d;
-  border-color: #ff4d4d;
-}
-
-.btn-outline-danger:hover {
-  background-color: #ff4d4d;
-  color: #ffffff;
-}
-
-.text-muted {
-  color: #000000;
-  font-weight: bold;
-}
\ No newline at end of file
diff --git a/lightningdev-dashboard/src/components/ConfigureProxy.css b/lightningdev-dashboard/src/components/ConfigureProxy.css
deleted file mode 100644
index d238e99..0000000
--- a/lightningdev-dashboard/src/components/ConfigureProxy.css
+++ /dev/null
@@ -1,100 +0,0 @@
-.configure-proxy {
-  margin-top: 20px;
-  margin-bottom: 20px;
-  padding: 20px;
-  background-color: #ffffff;
-  border-radius: 8px;
-  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
-}
-
-.header h4 {
-  font-size: 1.5rem;
-  margin: 0;
-}
-
-.header p {
-  color: #6c757d;
-}
-
-.checkbox-group {
-  display: flex;
-  align-items: center;
-}
-
-.checkbox-group label {
-  font-size: 0.9rem;
-  color: #6c757d;
-}
-
-.tab-container {
-  display: flex;
-  border-bottom: 2px solid #f0f0f0;
-  margin-bottom: 20px;
-}
-
-.tab {
-  flex: 1;
-  padding: 10px 15px;
-  text-align: center;
-  font-weight: 500;
-  color: #6c757d;
-  cursor: pointer;
-  background: none;
-  border: none;
-  outline: none;
-}
-
-.tab.active {
-  font-weight: bold;
-  color: #007bff;
-  border-bottom: 2px solid #007bff;
-}
-
-.auth-form,
-.whitelist-form {
-  padding: 20px 0;
-}
-
-.form-group {
-  margin-bottom: 15px;
-}
-
-.form-control {
-  width: 100%;
-  padding: 10px;
-  border-radius: 4px;
-  border: 1px solid #ddd;
-}
-
-.btn {
-  padding: 10px 15px;
-  border-radius: 4px;
-  color: #fff;
-  background-color: #007bff;
-  border: none;
-  cursor: pointer;
-}
-
-.full-width {
-  width: 100%;
-}
-.btn:hover {
-  background-color: #0056b3;
-}
-
-.row {
-  display: flex;
-  gap: 15px;
-}
-
-.col {
-  flex: 1;
-}
-
-.d-flex {
-  display: flex;
-}
-
-.justify-content-between {
-  justify-content: space-between;
-}
diff --git a/lightningdev-dashboard/src/components/ConfigureProxy.tsx b/lightningdev-dashboard/src/components/ConfigureProxy.tsx
index fd58af0..f5cc08c 100644
--- a/lightningdev-dashboard/src/components/ConfigureProxy.tsx
+++ b/lightningdev-dashboard/src/components/ConfigureProxy.tsx
@@ -1,5 +1,5 @@
 import React, { useState } from "react";
-import "./ConfigureProxy.css";
+import "./ConfigureProxy.module.css";
 import { proxyListCreateResidential } from "../services/apiService";
 import toast from "react-hot-toast";
 
@@ -13,7 +13,9 @@ const ConfigureProxy: React.FC = () => {
   const [state, setState] = useState<string>("Worldwide Mix");
   const [city, setCity] = useState<string>("Worldwide Mix");
   const [isp, setIsp] = useState<string>("Worldwide Mix");
-  const [mode, setMode] = useState<"CountryStateCity" | "CountryISP">("CountryStateCity");
+  const [mode, setMode] = useState<"CountryStateCity" | "CountryISP">(
+    "CountryStateCity",
+  );
   const [whitelistIp, setWhitelistIp] = useState<string>("");
   const [isLoading, setIsLoading] = useState<boolean>(false);
 
@@ -32,8 +34,12 @@ const ConfigureProxy: React.FC = () => {
         type,
         type === "sticky" ? sessionTime : undefined,
         country !== "Worldwide Mix" ? country : undefined,
-        mode === "CountryStateCity" && state !== "Worldwide Mix" ? state : undefined,
-        mode === "CountryStateCity" && city !== "Worldwide Mix" ? city : undefined
+        mode === "CountryStateCity" && state !== "Worldwide Mix"
+          ? state
+          : undefined,
+        mode === "CountryStateCity" && city !== "Worldwide Mix"
+          ? city
+          : undefined,
       );
       toast.success("Settings updated successfully!");
       console.log("Response:", response);
diff --git a/lightningdev-dashboard/src/components/DepositBalance/DepositBalance.css b/lightningdev-dashboard/src/components/DepositBalance/DepositBalance.css
deleted file mode 100644
index f679f74..0000000
--- a/lightningdev-dashboard/src/components/DepositBalance/DepositBalance.css
+++ /dev/null
@@ -1,107 +0,0 @@
-.deposit-balance-container {
-  margin-top: 20px;
-}
-
-.section-title {
-  font-size: 24px;
-  font-weight: bold;
-  color: #333333;
-}
-
-.section-subtitle {
-  font-size: 14px;
-  color: #6c757d;
-}
-
-.balance-input-section {
-  width: 45%;
-}
-
-.balance-input {
-  border: 1px solid #ced4da;
-  border-radius: 6px;
-  padding: 10px;
-  font-size: 16px;
-}
-
-.stripe-vat {
-  font-size: 12px;
-  color: #6c757d;
-  margin-top: 5px;
-  display: block;
-}
-
-.button-group button {
-  font-size: 14px;
-  padding: 10px;
-  margin-top: 10px;
-}
-
-.billing-info-alert {
-  font-size: 14px;
-  color: #856404;
-}
-
-.crypto-support h6 {
-  font-size: 16px;
-  font-weight: bold;
-  margin-bottom: 10px;
-}
-
-.crypto-list {
-  list-style: none;
-  padding-left: 0;
-  color: #6c757d;
-  font-size: 14px;
-}
-
-.footer-logos {
-  display: flex;
-  align-items: center;
-}
-
-.footer-logo {
-  width: 50px;
-  height: auto;
-}
-
-.extra-fee {
-  font-size: 12px;
-  color: #6c757d;
-}
-
-.balance-info-section {
-  width: 50%;
-}
-
-.illustration-image {
-  width: 100%;
-  height: auto;
-}
-
-.benefits-section h6 {
-  font-size: 18px;
-  font-weight: bold;
-  color: #333333;
-}
-
-.benefits-section p {
-  font-size: 14px;
-  color: #6c757d;
-}
-
-.benefits-list {
-  list-style: none;
-  padding-left: 0;
-  color: #6c757d;
-  font-size: 14px;
-  display: flex;
-  flex-wrap: wrap;
-  gap: 10px;
-}
-
-.benefits-list li::before {
-  content: "✔";
-  color: #1a73e8;
-  margin-right: 5px;
-}
diff --git a/lightningdev-dashboard/src/components/DepositBalance/DepositBalance.tsx b/lightningdev-dashboard/src/components/DepositBalance/DepositBalance.tsx
index 851f5df..4fc2e5f 100644
--- a/lightningdev-dashboard/src/components/DepositBalance/DepositBalance.tsx
+++ b/lightningdev-dashboard/src/components/DepositBalance/DepositBalance.tsx
@@ -1,5 +1,5 @@
 import React from "react";
-import "./DepositBalance.css";
+import "./DepositBalance.module.css";
 
 const DepositBalance: React.FC = () => {
   return (
diff --git a/lightningdev-dashboard/src/components/Footer/Footer.tsx b/lightningdev-dashboard/src/components/Footer/Footer.tsx
index 010a839..4c5bab4 100644
--- a/lightningdev-dashboard/src/components/Footer/Footer.tsx
+++ b/lightningdev-dashboard/src/components/Footer/Footer.tsx
@@ -1,5 +1,5 @@
 import React from "react";
-import "./footer.css";
+import "./Footer.module.css";
 
 const Footer: React.FC = () => {
   return (
diff --git a/lightningdev-dashboard/src/components/Footer/footer.css b/lightningdev-dashboard/src/components/Footer/footer.css
deleted file mode 100644
index e6e9092..0000000
--- a/lightningdev-dashboard/src/components/Footer/footer.css
+++ /dev/null
@@ -1,36 +0,0 @@
-/* Footer Container */
-footer {
-  background-color: #F5F6F9;
-  padding: 1.5rem 0;
-  text-align: center;
-  border-top: 1px solid #e0e0e0;
-}
-
-/* Footer Links */
-footer a {
-  color: #0d6efd;
-  font-weight: 500;
-  margin: 0 10px;
-  text-decoration: none;
-}
-
-footer a:hover {
-  color: #0056b3;
-  text-decoration: underline;
-}
-
-/* Social Icons */
-.social-icons {
-  margin-top: 0.5rem;
-}
-
-.social-icons .social-link {
-  color: #495057;
-  font-size: 1.2rem;
-  margin: 0 8px;
-  transition: color 0.3s ease;
-}
-
-.social-icons .social-link:hover {
-  color: #0d6efd;
-}
diff --git a/lightningdev-dashboard/src/components/Layout/Layout.css b/lightningdev-dashboard/src/components/Layout/Layout.css
deleted file mode 100644
index 804ee81..0000000
--- a/lightningdev-dashboard/src/components/Layout/Layout.css
+++ /dev/null
@@ -1,19 +0,0 @@
-.layout-container {
-  display: flex;
-  min-height: 100vh;
-  background-color: #f8f9fa; /* Light gray background */
-}
-
-.main-content-wrapper {
-  flex: 1;
-  display: flex;
-  flex-direction: column;
-}
-
-.main-content {
-  flex: 1;
-  padding: 20px;
-  margin-top: 90px; /* Adjust to match the height of the Navbar */
-  overflow-y: auto;
-}
-
diff --git a/lightningdev-dashboard/src/components/Layout/Layout.tsx b/lightningdev-dashboard/src/components/Layout/Layout.tsx
deleted file mode 100644
index ef05fab..0000000
--- a/lightningdev-dashboard/src/components/Layout/Layout.tsx
+++ /dev/null
@@ -1,32 +0,0 @@
-import React from "react";
-import Sidebar from "../Sidebar/Sidebar";
-import Navbar from "../Navbar/Navbar";
-import Footer from "../Footer/Footer";
-import "./Layout.css"; // Optional for custom styling
-
-type LayoutProps = {
-  children: React.ReactNode;
-};
-
-const Layout: React.FC<LayoutProps> = ({ children }) => {
-  return (
-    <div className="layout-container">
-      {/* Sidebar */}
-      <Sidebar />
-
-      {/* Main Content Area */}
-      <div className="main-content-wrapper">
-        {/* Navbar */}
-        <Navbar />
-
-        {/* Page Content */}
-        <main className="main-content">{children}</main>
-
-        {/* Footer */}
-        <Footer />
-      </div>
-    </div>
-  );
-};
-
-export default Layout;
diff --git a/lightningdev-dashboard/src/components/Navbar/Navbar.tsx b/lightningdev-dashboard/src/components/Navbar/Navbar.tsx
index 041ed5d..f33e4ec 100644
--- a/lightningdev-dashboard/src/components/Navbar/Navbar.tsx
+++ b/lightningdev-dashboard/src/components/Navbar/Navbar.tsx
@@ -1,5 +1,5 @@
 import React, { useState, useEffect } from "react";
-import "./navbar.css";
+import "./Navbar.module.css";
 
 const Navbar: React.FC = () => {
   const [isDarkMode, setIsDarkMode] = useState(false);
diff --git a/lightningdev-dashboard/src/components/Navbar/navbar.css b/lightningdev-dashboard/src/components/Navbar/navbar.css
deleted file mode 100644
index 85e6314..0000000
--- a/lightningdev-dashboard/src/components/Navbar/navbar.css
+++ /dev/null
@@ -1,206 +0,0 @@
-/* Navbar Container */
-.navbar-container {
-  background-color: #f5f6f9;
-  /* margin-left: 50px;
-  margin-right: 70px; */
-  font-size: 14px;
-  height: 100px;
-  display: flex;
-  align-items: center;
-  justify-content: space-between;
-  padding: 0 20px;
-  position: absolute;
-  top: 0;
-  left: 305px; /* Adjust for sidebar width */
-  right: 0;
-  z-index: 1050;
-}
-
-/* Home Icon */
-.navbar-container .home-icon {
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  border-radius: 6px;
-  width: 40px;
-  height: 40px;
-  margin-right: 10px;
-}
-
-.navbar-container .home-icon i {
-  font-size: 20px;
-  color: #6c757d;
-}
-
-/* Theme Toggle */
-.navbar-container .theme-toggle {
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  border-radius: 6px;
-  width: 40px;
-  height: 40px;
-  margin-right: 10px;
-}
-
-.navbar-container .theme-toggle .switch {
-  position: relative;
-  display: inline-block;
-  width: 36px;
-  height: 20px;
-}
-
-.navbar-container .theme-toggle .switch input {
-  opacity: 0;
-  width: 0;
-  height: 0;
-}
-
-.navbar-container .theme-toggle .slider {
-  position: absolute;
-  cursor: pointer;
-  top: 0;
-  left: 0;
-  right: 0;
-  bottom: 0;
-  background-color: #ccc;
-  transition: 0.4s;
-  border-radius: 20px;
-}
-
-.navbar-container .theme-toggle .slider:before {
-  position: absolute;
-  content: "";
-  height: 14px;
-  width: 14px;
-  left: 3px;
-  bottom: 3px;
-  background-color: white;
-  transition: 0.4s;
-  border-radius: 50%;
-}
-
-.navbar-container .theme-toggle input:checked + .slider {
-  background-color: #007bff;
-}
-
-.navbar-container .theme-toggle input:checked + .slider:before {
-  transform: translateX(16px);
-}
-
-/* Balance Section */
-.navbar-container .balance-container {
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  background-color: #eaf8eb;
-  border: 1px solid #6ac18d;
-  border-radius: 6px;
-  width: 150px;
-  height: 40px;
-  margin-right: 10px;
-}
-
-.navbar-container .balance-container .btn {
-  font-size: 14px;
-  font-weight: 500;
-  color: #28a745;
-  background: none;
-  border: none;
-  display: flex;
-  align-items: center;
-}
-
-.navbar-container .balance-container .btn i {
-  font-size: 16px;
-  margin-right: 8px;
-}
-
-/* Date & Time */
-.navbar-container .date-time {
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  background-color: #ffffff;
-  border: 1px solid #e0e0e0;
-  border-radius: 6px;
-  width: 180px;
-  height: 40px;
-  margin-right: 10px;
-}
-
-.navbar-container .date-time i {
-  font-size: 16px;
-  color: #007bff;
-  margin-right: 8px;
-}
-
-.navbar-container .date-time span {
-  font-size: 14px;
-  color: #6c757d;
-}
-
-/* User Profile */
-.navbar-container .user-profile {
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  background-color: #007bff;
-  border: 1px solid #007bff;
-  border-radius: 6px;
-  width: 180px;
-  height: 40px;
-  margin-right: 10px;
-}
-
-.navbar-container .user-profile .btn {
-  font-size: 14px;
-  font-weight: 500;
-  color: #ffffff;
-  background: none;
-  border: none;
-  display: flex;
-  align-items: center;
-}
-
-.navbar-container .user-profile .btn i {
-  font-size: 16px;
-  margin-right: 8px;
-}
-
-/* Logout */
-.navbar-container .logout-icon {
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  background-color: #ffffff;
-  border: 1px solid #e0e0e0;
-  border-radius: 6px;
-  width: 40px;
-  height: 40px;
-}
-
-.navbar-container .logout-icon .btn {
-  font-size: 14px;
-  color: #ff4d4d;
-  background: none;
-  border: none;
-}
-
-.navbar-container .logout-icon .btn i {
-  font-size: 16px;
-}
-
-.theme-toggle-container {
-  display: flex;
-  margin-right: 80px;
-  align-items: center;
-  justify-content: center;
-  background-color: #ffffff;
-  border: 1px solid #e0e0e0;
-  border-radius: 6px;
-  padding: 10px;
-  width: 120px;
-  height: 40px;
-  gap: 10px;
-}
\ No newline at end of file
diff --git a/lightningdev-dashboard/src/components/PlanCard.css b/lightningdev-dashboard/src/components/PlanCard.css
deleted file mode 100644
index 0f7d3c3..0000000
--- a/lightningdev-dashboard/src/components/PlanCard.css
+++ /dev/null
@@ -1,27 +0,0 @@
-.plan-card {
-    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
-    transition: all 0.3s ease-in-out;
-  }
-  
-  .plan-card:hover {
-    transform: translateY(-5px);
-  }
-  
-  .plan-card ul {
-    padding-left: 1rem;
-    list-style: none;
-  }
-  
-  .plan-card ul li {
-    position: relative;
-    padding-left: 20px;
-    margin-bottom: 8px;
-  }
-  
-  .plan-card ul li::before {
-    content: "✔";
-    position: absolute;
-    left: 0;
-    color: #007bff;
-  }
-  
\ No newline at end of file
diff --git a/lightningdev-dashboard/src/components/PlanCard.tsx b/lightningdev-dashboard/src/components/PlanCard.tsx
index 12ecd0f..f5c6146 100644
--- a/lightningdev-dashboard/src/components/PlanCard.tsx
+++ b/lightningdev-dashboard/src/components/PlanCard.tsx
@@ -1,6 +1,6 @@
 import React from "react";
 import { useRouter } from "next/router"; // Import useRouter for navigation
-import "./PlanCard.css";
+import "./PlanCard.module.css";
 
 type PlanCardProps = {
   title: string;
@@ -16,7 +16,6 @@ const PlanCard: React.FC<PlanCardProps> = ({ title, price, details }) => {
     router.push({
       pathname: "/checkout",
       query: { title, price }, // Pass plan details as query parameters
-      
     });
   };
 
diff --git a/lightningdev-dashboard/src/components/PlanSection/PlanSection.tsx b/lightningdev-dashboard/src/components/PlanSection/PlanSection.tsx
index 1c7df59..dea2606 100644
--- a/lightningdev-dashboard/src/components/PlanSection/PlanSection.tsx
+++ b/lightningdev-dashboard/src/components/PlanSection/PlanSection.tsx
@@ -1,8 +1,8 @@
 import React, { useEffect, useState } from "react";
 import axios from "axios";
 import { FaBook, FaFilter } from "react-icons/fa";
-import "./plansection.css";
 import { useRouter } from "next/router";
+import "./PlanSection.module.css";
 
 type Plan = {
   id: string;
@@ -52,26 +52,28 @@ const PlanSection: React.FC = () => {
       {/* Gift Code Section */}
       <div className="d-flex align-items-center justify-content-between mb-4 gift-code-wrapper">
         {/* Left Section */}
-  <div className="d-flex align-items-center">
-    <input
-      type="text"
-      className="gift-code-input form-control me-2"
-      placeholder="Enter gift code"
-    />
-    <button className="btn btn-primary gift-code-btn">Get your gift 🎁</button>
-    <span className="gift-help-text ms-3">
-      How can I get a gift?{" "}
-      <a href="#" className="gift-help-link">
-        <FaBook />
-      </a>
-    </span>
-  </div>
+        <div className="d-flex align-items-center">
+          <input
+            type="text"
+            className="gift-code-input form-control me-2"
+            placeholder="Enter gift code"
+          />
+          <button className="btn btn-primary gift-code-btn">
+            Get your gift 🎁
+          </button>
+          <span className="gift-help-text ms-3">
+            How can I get a gift?{" "}
+            <a href="#" className="gift-help-link">
+              <FaBook />
+            </a>
+          </span>
+        </div>
 
-  {/* Right Section */}
-  <button className="btn btn-light filter-btn">
-    <FaFilter />
-  </button>
-</div>
+        {/* Right Section */}
+        <button className="btn btn-light filter-btn">
+          <FaFilter />
+        </button>
+      </div>
 
       {/* Display Loading, Error, or No Plans */}
       {loading && <p>Loading plans...</p>}
@@ -82,58 +84,57 @@ const PlanSection: React.FC = () => {
 
       {/* Plan Cards */}
       {plans.map((plan) => (
-  <div key={plan.id} className="plan-card mb-4">
-    <div className="d-flex align-items-center">
-      {/* Progress Circle */}
-      <div className="progress-circle-container">
-        <div className="progress-circle bg-primary text-white">
-          <strong>
-            {((plan.dataLeft / plan.totalData) * 100).toFixed(0)}%
-          </strong>
-        </div>
-      </div>
+        <div key={plan.id} className="plan-card mb-4">
+          <div className="d-flex align-items-center">
+            {/* Progress Circle */}
+            <div className="progress-circle-container">
+              <div className="progress-circle bg-primary text-white">
+                <strong>
+                  {((plan.dataLeft / plan.totalData) * 100).toFixed(0)}%
+                </strong>
+              </div>
+            </div>
 
-      {/* Plan Details */}
-      <div className="plan-details ms-3 flex-grow-1">
-        <h6 className="plan-title">{plan.name}</h6>
-        <p className="plan-description">
-          Ideal proxies for any use case & purpose. By accessing our
-          10M+ IP pool non-subnet linked, bans and blocks are non-existent.
-        </p>
-      </div>
-
-      {/* Total Data */}
-      <div className="plan-data">
-        <h6>{plan.totalData.toFixed(2)} GB</h6>
-      </div>
-    </div>
-    <hr />
-    <div className="plan-meta-container">
-      {/* Plan Meta Details */}
-      <div className="plan-meta-item">
-        <strong>Plan ID:</strong>
-        <span>{plan.id}</span>
-      </div>
-      <div className="plan-meta-item">
-        <strong>Data Left:</strong>
-        <span>
-          {plan.dataLeft.toFixed(2)} GB / {plan.totalData.toFixed(2)} GB
-        </span>
-      </div>
-      <div className="plan-meta-item">
-        <strong>Expires:</strong>
-        <span>{plan.expires}</span>
-      </div>
-      <button
-        className="btn btn-outline-primary btn-generate-proxy"
-        onClick={() => handleGenerateProxy(plan.id)}
-      >
-        Generate Proxy →
-      </button>
-    </div>
-  </div>
-))}
+            {/* Plan Details */}
+            <div className="plan-details ms-3 flex-grow-1">
+              <h6 className="plan-title">{plan.name}</h6>
+              <p className="plan-description">
+                Ideal proxies for any use case & purpose. By accessing our 10M+
+                IP pool non-subnet linked, bans and blocks are non-existent.
+              </p>
+            </div>
 
+            {/* Total Data */}
+            <div className="plan-data">
+              <h6>{plan.totalData.toFixed(2)} GB</h6>
+            </div>
+          </div>
+          <hr />
+          <div className="plan-meta-container">
+            {/* Plan Meta Details */}
+            <div className="plan-meta-item">
+              <strong>Plan ID:</strong>
+              <span>{plan.id}</span>
+            </div>
+            <div className="plan-meta-item">
+              <strong>Data Left:</strong>
+              <span>
+                {plan.dataLeft.toFixed(2)} GB / {plan.totalData.toFixed(2)} GB
+              </span>
+            </div>
+            <div className="plan-meta-item">
+              <strong>Expires:</strong>
+              <span>{plan.expires}</span>
+            </div>
+            <button
+              className="btn btn-outline-primary btn-generate-proxy"
+              onClick={() => handleGenerateProxy(plan.id)}
+            >
+              Generate Proxy →
+            </button>
+          </div>
+        </div>
+      ))}
     </section>
   );
 };
diff --git a/lightningdev-dashboard/src/components/PlanSection/plansection.css b/lightningdev-dashboard/src/components/PlanSection/plansection.css
deleted file mode 100644
index 00c38d4..0000000
--- a/lightningdev-dashboard/src/components/PlanSection/plansection.css
+++ /dev/null
@@ -1,159 +0,0 @@
-.plan-section {
-  margin-top: 20px;
-}
-
-.section-title {
-  margin-top: 30px;
-  font-size: 20px;
-  font-weight: bold;
-  color: #333333;
-}
-
-.section-subtitle {
-  font-size: 14px;
-  color: #6c757d;
-}
-
-.gift-code-container {
-  display: flex;
-  align-items: left;
-  background: #f8f9fa;
-  padding: 10px;
-  border-radius: 10px;
-}
-
-
-.filter-btn {
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  background: #fff;
-  border: 1px solid #ced4da;
-  padding: 10px 15px;
-  border-radius: 6px;
-}
-
-.plan-card {
-  background-color: #fff;
-  border-radius: 10px;
-  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
-  padding: 20px;
-}
-
-.progress-circle-container {
-  flex-shrink: 0;
-}
-
-.progress-circle {
-  width: 60px;
-  height: 60px;
-  border-radius: 50%;
-  background-color: #1a73e8;
-  color: #fff;
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  font-size: 16px;
-  font-weight: bold;
-}
-
-.plan-title {
-  font-size: 16px;
-  font-weight: bold;
-  color: #333333;
-}
-
-.plan-description {
-  font-size: 14px;
-  color: #6c757d;
-  margin-top: 5px;
-}
-
-.plan-meta {
-  font-size: 14px;
-  margin-bottom: 5px;
-  color: #6c757d;
-}
-.plan-meta-container {
-  display: flex;
-  justify-content: space-between;
-  flex-wrap: wrap;
-  margin-top: 10px;
-}
-
-.plan-meta-item {
-  flex: 1;
-  font-size: 14px;
-  margin-right: 15px;
-}
-
-.plan-meta-item strong {
-  font-weight: bold;
-  display: block;
-  color: #333333;
-}
-
-.plan-meta-item span {
-  font-weight: normal;
-  color: #6c757d;
-}
-
-
-.plan-data h6 {
-  font-size: 20px;
-  font-weight: bold;
-  color: #000000;
-  text-align: right;
-}
-
-.btn-generate-proxy {
-  white-space: nowrap;
-  background-color: #f0f8ff;
-  border: 1px solid #007bff;
-  color: #007bff;
-  padding: 8px 15px;
-  border-radius: 6px;
-}
-
-.btn-generate-proxy:hover {
-  background-color: #007bff;
-  color: #fff;
-}
-
-
-
-.gift-code-input {
-  border: 1px solid #ced4da;
-  border-radius: 6px;
-  padding: 7px;
-  flex-shrink: 1;
-  width: 250px; /* Adjust width as needed */
-}
-
-.gift-code-btn {
-  white-space: nowrap;
-  flex-shrink: 0;
-  margin-left: 10px;
-}
-
-.gift-help-text {
-  font-size: 14px;
-  color: #6c757d;
-  margin-left: 10px;
-}
-
-.gift-help-link {
-  color: #007bff;
-  margin-left: 5px;
-}
-
-.filter-btn {
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  background: #fff;
-  border: 1px solid #ced4da;
-  padding: 10px 15px;
-  border-radius: 6px;
-  margin-left: 20px;
-}
\ No newline at end of file
diff --git a/lightningdev-dashboard/src/components/ProxyDetails.css b/lightningdev-dashboard/src/components/ProxyDetails.css
deleted file mode 100644
index 8854293..0000000
--- a/lightningdev-dashboard/src/components/ProxyDetails.css
+++ /dev/null
@@ -1,166 +0,0 @@
-.proxy-details {
-  padding: 20px;
-  background-color: #ffffff;
-  border: 1px solid #e9ecef;
-  border-radius: 8px;
-}
-
-h5 {
-  font-size: 1.2rem;
-  margin-bottom: 15px;
-  font-weight: bold;
-}
-
-.proxy-config {
-  display: flex;
-  flex-direction: column;
-  gap: 20px;
-  margin-bottom: 20px;
-}
-
-.config-row {
-  display: flex;
-  flex-direction: column;
-}
-
-label {
-  font-weight: bold;
-  margin-bottom: 8px;
-  color: #6c757d;
-}
-
-.read-only-input {
-  background-color: #f8f9fa;
-  border: 1px solid #ced4da;
-  border-radius: 4px;
-  padding: 8px;
-}
-
-.sticky-session-box {
-  padding: 15px;
-  background-color: #f8f9fa;
-  border: 1px solid #ced4da;
-  border-radius: 8px;
-}
-
-.sticky-session-heading {
-  font-weight: bold;
-  color: #6c757d;
-}
-
-.toggle-wrapper {
-  display: flex;
-  align-items: center;
-}
-
-.switch {
-  position: relative;
-  display: inline-block;
-  width: 34px;
-  height: 20px;
-}
-
-.switch input {
-  opacity: 0;
-  width: 0;
-  height: 0;
-}
-
-.slider {
-  position: absolute;
-  cursor: pointer;
-  top: 0;
-  left: 0;
-  right: 0;
-  bottom: 0;
-  background-color: #ccc;
-  transition: 0.4s;
-  border-radius: 20px;
-}
-
-.slider:before {
-  position: absolute;
-  content: "";
-  height: 12px;
-  width: 12px;
-  left: 4px;
-  bottom: 4px;
-  background-color: white;
-  transition: 0.4s;
-  border-radius: 50%;
-}
-
-input:checked + .slider {
-  background-color: #007bff;
-}
-
-input:checked + .slider:before {
-  transform: translateX(14px);
-}
-
-.proxy-format-settings {
-  display: flex;
-  justify-content: space-between;
-  align-items: center;
-}
-
-.proxy-format-heading {
-  font-weight: bold;
-  color: #6c757d;
-}
-
-.sticky-count-input {
-  width: 100px;
-  text-align: center;
-}
-
-textarea {
-  width: 100%;
-  height: 200px;
-  border: 1px solid #ced4da;
-  border-radius: 4px;
-  padding: 10px;
-  resize: none;
-}
-
-.proxy-actions {
-  display: flex;
-  gap: 10px;
-  margin-top: 15px;
-}
-
-button {
-  padding: 10px 15px;
-  font-weight: bold;
-  border-radius: 4px;
-}
-
-.btn-primary {
-  background-color: #007bff;
-  color: #fff;
-  border: none;
-}
-
-.btn-primary:hover {
-  background-color: #0056b3;
-}
-
-.btn-outline-primary {
-  background-color: transparent;
-  color: #007bff;
-  border: 1px solid #007bff;
-}
-
-.btn-outline-primary:hover {
-  background-color: #e9f7ff;
-}
-
-.btn-outline-secondary {
-  background-color: transparent;
-  color: #6c757d;
-  border: 1px solid #6c757d;
-}
-
-.btn-outline-secondary:hover {
-  background-color: #f8f9fa;
-}
diff --git a/lightningdev-dashboard/src/components/ProxyDetails.tsx b/lightningdev-dashboard/src/components/ProxyDetails.tsx
index 1a03489..c62d3aa 100644
--- a/lightningdev-dashboard/src/components/ProxyDetails.tsx
+++ b/lightningdev-dashboard/src/components/ProxyDetails.tsx
@@ -1,6 +1,6 @@
 import React, { useState } from "react";
 import toast, { Toaster } from "react-hot-toast";
-import "./ProxyDetails.css";
+import "./ProxyDetails.module.css";
 
 const ProxyDetails: React.FC = () => {
   const [sessionTime, setSessionTime] = useState<number>(1); // Default session time in minutes
@@ -45,11 +45,11 @@ const ProxyDetails: React.FC = () => {
     <div className="proxy-details">
       <Toaster position="top-right" />
 
-      <h5>Proxy</h5>
+      <h5 className="heading">Proxy</h5>
       <div className="proxy-config">
         {/* Host and Port */}
         <div className="config-row">
-          <label>Host</label>
+          <label className="label">Host</label>
           <input
             type="text"
             value="resi-www.lightningproxies.net"
@@ -58,7 +58,7 @@ const ProxyDetails: React.FC = () => {
           />
         </div>
         <div className="config-row">
-          <label>Port (HTTP & SOCKS5)</label>
+          <label className="label">Port (HTTP & SOCKS5)</label>
           <input
             type="text"
             value="9999"
@@ -69,7 +69,7 @@ const ProxyDetails: React.FC = () => {
 
         {/* Rotating Proxy */}
         <div className="config-row">
-          <label>Rotating Proxy</label>
+          <label className="label">Rotating Proxy</label>
           <input
             type="text"
             value="resi-www.lightningproxies.net:9999:atjxdeqzgdlry100714-zone-resi:uepsjpxeji"
@@ -81,12 +81,14 @@ const ProxyDetails: React.FC = () => {
         {/* Sticky Sessions */}
         <div className="sticky-session-box">
           <div className="d-flex justify-content-between align-items-center">
-            <label className="sticky-session-heading">
+            <label className="sticky-session-heading label">
               Sticky Sessions (Session time: {sessionTime} min)
             </label>
             <div className="toggle-wrapper">
-              <label className="toggle-label me-2">Activate Super Sticky</label>
-              <label className="switch">
+              <label className="toggle-label me-2 label">
+                Activate Super Sticky
+              </label>
+              <label className="switch label">
                 <input
                   type="checkbox"
                   checked={isSuperSticky}
@@ -109,7 +111,9 @@ const ProxyDetails: React.FC = () => {
         {/* Proxy Format Settings */}
         <div className="proxy-format-settings">
           <div className="d-flex justify-content-between align-items-center">
-            <label className="proxy-format-heading">Proxy Format Settings:</label>
+            <label className="proxy-format-heading label">
+              Proxy Format Settings:
+            </label>
             <input
               type="number"
               value={stickyCount}
@@ -128,16 +132,22 @@ const ProxyDetails: React.FC = () => {
           rows={10}
           value={proxies.join("\n")}
           readOnly
-          placeholder="Generated proxies will appear here"
+          placeholder="Generated proxies will appear here textarea"
         />
         <div className="proxy-actions">
-          <button className="btn btn-primary" onClick={generateProxies}>
+          <button className="button btn btn-primary" onClick={generateProxies}>
             Generate Proxies
           </button>
-          <button className="btn btn-outline-primary" onClick={copyToClipboard}>
+          <button
+            className="button btn btn-outline-primary"
+            onClick={copyToClipboard}
+          >
             Copy Proxies
           </button>
-          <button className="btn btn-outline-secondary" onClick={downloadAsText}>
+          <button
+            className="button btn btn-outline-secondary"
+            onClick={downloadAsText}
+          >
             Save as .txt
           </button>
         </div>
diff --git a/lightningdev-dashboard/src/components/ProxyHeader.css b/lightningdev-dashboard/src/components/ProxyHeader.css
deleted file mode 100644
index 3e52ddc..0000000
--- a/lightningdev-dashboard/src/components/ProxyHeader.css
+++ /dev/null
@@ -1,111 +0,0 @@
-/* Proxy Header Container */
-.proxy-header-container {
-  margin-top: 20px;
-}
-
-/* Header Section */
-.proxy-header-top {
-  font-weight: bold;
-}
-
-.plan-id {
-  font-size: 0.9rem;
-  color: #6c757d;
-}
-
-.support-text {
-  color: #6c757d;
-}
-
-/* Card Styles */
-.card {
-  border-radius: 8px;
-  border: 1px solid #e9ecef;
-}
-
-.card-title {
-  font-size: 0.9rem;
-  color: #6c757d;
-  margin-bottom: 0;
-}
-
-.icon-container {
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  width: 36px;
-  height: 36px;
-  background-color: #007bff; /* Blue background */
-  border-radius: 50%;
-}
-
-.icon {
-  color: white; /* White icon inside */
-}
-
-/* Plan Settings Button */
-.plan-settings-btn {
-  top: 10px;
-  right: 10px;
-  background-color: #f0f9ff;
-  border: 1px solid #007bff;
-}
-
-/* Circular Progress */
-.progress-circle {
-  position: relative;
-  width: 100px;
-  height: 100px;
-}
-
-.progress-text {
-  position: absolute;
-  top: 50%;
-  left: 50%;
-  transform: translate(-50%, -50%);
-  font-size: 1rem;
-  font-weight: bold;
-}
-
-/* Bandwidth Summary */
-.bandwidth-summary {
-  flex-grow: 1;
-}
-
-.bandwidth-values {
-  width: 100px;
-  text-align: end;
-}
-
-.add-bandwidth {
-  padding: 10px;
-  align-items: center;
-  max-width: 300px;
-}
-
-.add-bandwidth-input {
-  width: 100px;
-  text-align: left;
-  height: 20px;
-}
-
-.add-button {
-  padding: 6px 16px;
-}
-
-
-/* Dot Indicators */
-.dot {
-  width: 12px;
-  height: 12px;
-  border-radius: 50%;
-  display: inline-block;
-}
-
-.used-dot {
-  background-color: #007bff;
-}
-
-.remaining-dot {
-  background-color: #6c757d;
-}
diff --git a/lightningdev-dashboard/src/components/ProxyHeader.tsx b/lightningdev-dashboard/src/components/ProxyHeader.tsx
index 47488c9..851f5b7 100644
--- a/lightningdev-dashboard/src/components/ProxyHeader.tsx
+++ b/lightningdev-dashboard/src/components/ProxyHeader.tsx
@@ -1,7 +1,7 @@
 import React from "react";
 import { Circle } from "rc-progress";
 import { Home, Calendar, Database } from "lucide-react";
-import "./ProxyHeader.css";
+import "./ProxyHeader.module.css";
 
 type ProxyHeaderProps = {
   planId: string;
@@ -97,14 +97,14 @@ const ProxyHeader: React.FC<ProxyHeaderProps> = ({
               <p className="mb-0">Remaining Bandwidth</p>
             </div>
             <div className="add-bandwidth align-items-center">
-            <p className="mb-0">Add Bandwidth</p>
-            <input
-              type="number"
-              className="form-control add-bandwidth-input"
-              placeholder="0"
-            />
-            
-            {/* <span className="ms-2">GB</span> */}
+              <p className="mb-0">Add Bandwidth</p>
+              <input
+                type="number"
+                className="form-control add-bandwidth-input"
+                placeholder="0"
+              />
+
+              {/* <span className="ms-2">GB</span> */}
             </div>
           </div>
 
@@ -112,14 +112,15 @@ const ProxyHeader: React.FC<ProxyHeaderProps> = ({
           <div className="bandwidth-values text-end">
             <p className="mb-2">{usedBandwidth.toFixed(2)} GB</p>
             <p>{remainingBandwidth.toFixed(2)} GB</p>
-            <p><button className="btn btn-primary ms-3 add-button">Add &gt;</button></p>
+            <p>
+              <button className="btn btn-primary ms-3 add-button">
+                Add &gt;
+              </button>
+            </p>
           </div>
 
           {/* Add Bandwidth Section */}
-          <div className="add-bandwidth d-flex align-items-center ms-auto">
-
-            
-          </div>
+          <div className="add-bandwidth d-flex align-items-center ms-auto"></div>
         </div>
       </div>
     </div>
diff --git a/lightningdev-dashboard/src/components/Sidebar/Sidebar.tsx b/lightningdev-dashboard/src/components/Sidebar/Sidebar.tsx
index 377ea2d..1bc5a3f 100644
--- a/lightningdev-dashboard/src/components/Sidebar/Sidebar.tsx
+++ b/lightningdev-dashboard/src/components/Sidebar/Sidebar.tsx
@@ -4,12 +4,13 @@ import {
   Wallet,
   FileText,
   Server,
-  Users, Globe,
-  ChevronLeft
+  Users,
+  Globe,
+  ChevronLeft,
 } from "lucide-react";
 import Link from "next/link";
-import "./sidebar.css";
 import { useState } from "react";
+import "./Sidebar.module.css";
 
 const Sidebar = () => {
   const [isSidebarOpen, setIsSidebarOpen] = useState(true);
@@ -27,11 +28,11 @@ const Sidebar = () => {
           className="logo"
         />
         <button className="toggle-btn" onClick={toggleSidebar}>
-<ChevronLeft
-  size={18}
-  className={`toggle-icon ${isSidebarOpen ? "" : "rotate"}`}
-/>
-</button>
+          <ChevronLeft
+            size={18}
+            className={`toggle-icon ${isSidebarOpen ? "" : "rotate"}`}
+          />
+        </button>
       </div>
 
       {/* Main Menu */}
@@ -152,28 +153,28 @@ const Sidebar = () => {
 
       {/* LightningProxies Extension */}
       <div className="extension-section">
-  <span className="badge badge-new">NEW</span>
-  <div className="extension-header">
-    <img
-      src="https://lightningproxies.net/assets/images/logo.svg"
-      alt="LightningProxies Logo"
-      className="extension-logo"
-    />
-    <span className="extension-title">LightningProxies Extension</span>
-  </div>
-  <p className="extension-description">
-    A proxy extension enhances online privacy by routing traffic through an intermediary server.
-  </p>
-  <button className="extension-btn">
-    <img
-      src="https://lightningproxies.net/assets/images/chrome.svg"
-      alt="Chrome Icon"
-      className="chrome-icon"
-    />
-    Add to Chrome
-  </button>
-</div>
-
+        <span className="badge badge-new">NEW</span>
+        <div className="extension-header">
+          <img
+            src="https://lightningproxies.net/assets/images/logo.svg"
+            alt="LightningProxies Logo"
+            className="extension-logo"
+          />
+          <span className="extension-title">LightningProxies Extension</span>
+        </div>
+        <p className="extension-description">
+          A proxy extension enhances online privacy by routing traffic through
+          an intermediary server.
+        </p>
+        <button className="extension-btn">
+          <img
+            src="https://lightningproxies.net/assets/images/chrome.svg"
+            alt="Chrome Icon"
+            className="chrome-icon"
+          />
+          Add to Chrome
+        </button>
+      </div>
 
       {/* Footer */}
       <div className="sidebar-footer">
diff --git a/lightningdev-dashboard/src/components/Sidebar/sidebar.css b/lightningdev-dashboard/src/components/Sidebar/sidebar.css
deleted file mode 100644
index 68bd773..0000000
--- a/lightningdev-dashboard/src/components/Sidebar/sidebar.css
+++ /dev/null
@@ -1,193 +0,0 @@
-.sidebar-wrapper {
-  width: 300px;
-  /* height: 100vh; */
-  overflow-y: scroll;
-  overflow-y: auto;
-  background-color: #fff;
-  padding: 30px;
-  display: flex;
-  flex-direction: column;
-}
-
-.sidebar-wrapper::-webkit-scrollbar {
-  display: none;
-}
-
-.logo-box {
-  text-align: center;
-  margin-bottom: 20px;
-}
-
-.logo {
-  width: 150px;
-}
-
-.menu-set {
-  margin-bottom: 20px;
-
-}
-
-.menu-link {
-  color: #000000;
-}
-
-.menu-heading {
-  font-size: 12px;
-  color: #6c757d;
-  margin-bottom: 10px;
-  text-transform: uppercase;
-}
-
-.menu {
-  list-style: none;
-  padding: 0;
-  margin: 0;
-}
-
-.menu-item {
-  display: flex;
-  align-items: center;
-  padding: 20px 15px;
-  font-size: 16px;
-  color: #343a40;
-  cursor: pointer;
-  transition: background-color 0.3s ease;
-}
-
-.menu-item:hover {
-  color: #007bff; /* Change text color on hover */
-  background-color: #f0f8ff; /* Highlight background as light blue on hover */
-  border-radius: 4px; /* Optional: round the corners for better appearance */
-}
-
-.menu-icon {
-  width: 25px;
-  height: 25px;
-  margin-right: 10px;
-}
-
-.menu-item:hover {
-  color: #007bff;
-}
-
-.badge {
-  font-size: 10px;
-  margin-left: 5px;
-}
-
-.badge-new {
-  position: absolute;
-  top: -10px;
-  left: 10px;
-  color: #fff;
-  background-color: #007bff;
-  font-size: 10px;
-  padding: 4px 6px;
-  border-radius: 8px;
-  font-weight: bold;
-  text-transform: uppercase;
-}
-
-.extension-section {
-  border: 1px solid #657bea;
-  padding: 16px;
-  margin-top: 50px;
-  text-align: center;
-  border-radius: 12px;
-  background-color: #ffffff;
-  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
-  position: relative;
-}
-
-.extension-header {
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  margin-bottom: 10px;
-}
-
-.extension-logo {
-  width: 40px;
-  height: 40px;
-  margin-right: 10px;
-}
-
-.extension-title {
-  font-size: 16px;
-  font-weight: bold;
-  color: #000;
-}
-
-.extension-description {
-  font-size: 14px;
-  color: #6c757d;
-  margin-bottom: 20px;
-}
-
-.extension-btn {
-  background-color: #007bff;
-  color: #fff;
-  border: none;
-  padding: 12px 20px;
-  border-radius: 8px;
-  font-size: 16px;
-  font-weight: bold;
-  cursor: pointer;
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  gap: 8px;
-  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);
-  transition: background-color 0.3s ease, box-shadow 0.3s ease;
-}
-
-.extension-btn:hover {
-  background-color: #0056b3;
-  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);
-}
-
-.chrome-icon {
-  width: 20px;
-  height: 20px;
-}
-.sidebar-footer {
-  text-align: center;
-  margin-top: 80px;
-}
-
-.footer-links {
-  list-style: none;
-  display: flex;
-  justify-content: center;
-  color: #000000;
-  gap: 10px;
-  padding: 0;
-}
-
-.footer-links a {
-  font-size: 12px;
-  font-weight: bold;
-  color: #6c757d;
-  text-decoration: none;
-}
-
-.social-icons {
-  display: flex;
-  justify-content: center;
-  gap: 10px;
-  margin-top: 10px;
-}
-
-.social-icon {
-  width: 25px;
-  height: 25px;
-}
-
-.toggle-btn {
-  background: none;
-  border: none;
-  cursor: pointer;
-  padding: 5px;
-  margin-left: 10px;
-}
-
diff --git a/lightningdev-dashboard/src/pages/_app.tsx b/lightningdev-dashboard/src/pages/_app.tsx
index 11af565..213c760 100644
--- a/lightningdev-dashboard/src/pages/_app.tsx
+++ b/lightningdev-dashboard/src/pages/_app.tsx
@@ -1,16 +1,15 @@
-import "../styles/globals.css";
-import "../styles/dashboard.css";
 import "bootstrap/dist/css/bootstrap.min.css";
+import "../styles/globals.css";
 
 import { AppProps } from "next/app";
 import { useEffect } from "react";
 
 function MyApp({ Component, pageProps }: AppProps) {
-    useEffect(() => {
-        import("bootstrap/dist/js/bootstrap.bundle.min.js");
-    }, []);
+  useEffect(() => {
+    import("bootstrap/dist/js/bootstrap.bundle.min.js");
+  }, []);
 
-    return <Component {...pageProps} />;
+  return <Component {...pageProps} />;
 }
 
 export default MyApp;
diff --git a/lightningdev-dashboard/src/pages/api/add-balance.ts b/lightningdev-dashboard/src/pages/api/add-balance.ts
index 68a920a..89d71e5 100644
--- a/lightningdev-dashboard/src/pages/api/add-balance.ts
+++ b/lightningdev-dashboard/src/pages/api/add-balance.ts
@@ -1,23 +1,24 @@
 import { state } from "./state";
 import { NextApiRequest, NextApiResponse } from "next";
 export default function handler(req: NextApiRequest, res: NextApiResponse) {
-    if (req.method === "POST") {
-        const { amount } = req.body;
+  if (req.method === "POST") {
+    const { amount } = req.body;
 
-        if (state.isPlanExpired) {
-            return res.status(400).json({
-                success: false,
-                message: "Cannot add balance to an expired plan. Please renew your plan.",
-            });
-        }
+    if (state.isPlanExpired) {
+      return res.status(400).json({
+        success: false,
+        message:
+          "Cannot add balance to an expired plan. Please renew your plan.",
+      });
+    }
 
-        state.userBalance += amount;
+    state.userBalance += amount;
 
-        res.status(200).json({
-            success: true,
-            newBalance: state.userBalance,
-        });
-    } else {
-        res.status(405).json({ message: "Method Not Allowed" });
-    }
+    res.status(200).json({
+      success: true,
+      newBalance: state.userBalance,
+    });
+  } else {
+    res.status(405).json({ message: "Method Not Allowed" });
+  }
 }
diff --git a/lightningdev-dashboard/src/pages/api/add-gigabytes.ts b/lightningdev-dashboard/src/pages/api/add-gigabytes.ts
index 3ed3297..eb4236a 100644
--- a/lightningdev-dashboard/src/pages/api/add-gigabytes.ts
+++ b/lightningdev-dashboard/src/pages/api/add-gigabytes.ts
@@ -1,21 +1,21 @@
 import { NextApiRequest, NextApiResponse } from "next";
 
 export default function handler(
-    req: NextApiRequest,
-    res: NextApiResponse<{ success: boolean; newBalance?: number }>
+  req: NextApiRequest,
+  res: NextApiResponse<{ success: boolean; newBalance?: number }>,
 ) {
-    if (req.method === "POST") {
-        const { gigabytes } = req.body;
+  if (req.method === "POST") {
+    const { gigabytes } = req.body;
 
-        if (!gigabytes || gigabytes <= 0) {
-            return res.status(400).json({ success: false });
-        }
-
-        res.status(200).json({
-            success: true,
-            newBalance: gigabytes + 10,
-        });
-    } else {
-        res.status(405).json({ success: false });
+    if (!gigabytes || gigabytes <= 0) {
+      return res.status(400).json({ success: false });
     }
+
+    res.status(200).json({
+      success: true,
+      newBalance: gigabytes + 10,
+    });
+  } else {
+    res.status(405).json({ success: false });
+  }
 }
diff --git a/lightningdev-dashboard/src/pages/api/create-proxy.ts b/lightningdev-dashboard/src/pages/api/create-proxy.ts
index fabfff0..b9319a7 100644
--- a/lightningdev-dashboard/src/pages/api/create-proxy.ts
+++ b/lightningdev-dashboard/src/pages/api/create-proxy.ts
@@ -8,7 +8,7 @@ type ProxyResponse = {
 
 export default function handler(
   req: NextApiRequest,
-  res: NextApiResponse<ProxyResponse>
+  res: NextApiResponse<ProxyResponse>,
 ) {
   if (req.method === "POST") {
     res.status(201).json({ success: true, proxyId: "proxy123" });
diff --git a/lightningdev-dashboard/src/pages/api/proxy-list.ts b/lightningdev-dashboard/src/pages/api/proxy-list.ts
index acca78f..f0450ab 100644
--- a/lightningdev-dashboard/src/pages/api/proxy-list.ts
+++ b/lightningdev-dashboard/src/pages/api/proxy-list.ts
@@ -10,7 +10,7 @@ type ProxyList = {
 
 export default function handler(
   req: NextApiRequest,
-  res: NextApiResponse<ProxyList>
+  res: NextApiResponse<ProxyList>,
 ) {
   res.status(200).json({
     countryCodes: ["US", "IN", "UK", "DE"],
diff --git a/lightningdev-dashboard/src/pages/api/renew-plan.ts b/lightningdev-dashboard/src/pages/api/renew-plan.ts
index 72c0dc7..c0a36a7 100644
--- a/lightningdev-dashboard/src/pages/api/renew-plan.ts
+++ b/lightningdev-dashboard/src/pages/api/renew-plan.ts
@@ -2,14 +2,14 @@ import { resetPlan } from "./state";
 import { NextApiRequest, NextApiResponse } from "next";
 
 export default function handler(req: NextApiRequest, res: NextApiResponse) {
-    if (req.method === "POST") {
-        resetPlan(); 
-        res.status(200).json({
-            success: true,
-            balance: 10,
-            bandwidthUsed: 0.15 * 1e9,
-        });
-    } else {
-        res.status(405).json({ message: "Method Not Allowed" });
-    }
+  if (req.method === "POST") {
+    resetPlan();
+    res.status(200).json({
+      success: true,
+      balance: 10,
+      bandwidthUsed: 0.15 * 1e9,
+    });
+  } else {
+    res.status(405).json({ message: "Method Not Allowed" });
+  }
 }
diff --git a/lightningdev-dashboard/src/pages/api/state.ts b/lightningdev-dashboard/src/pages/api/state.ts
index ccb38c3..5518bb6 100644
--- a/lightningdev-dashboard/src/pages/api/state.ts
+++ b/lightningdev-dashboard/src/pages/api/state.ts
@@ -1,12 +1,11 @@
 export const state = {
-    userBalance: 10, 
-    bandwidthUsed: 0.15 * 1e9,
-    isPlanExpired: false, 
+  userBalance: 10,
+  bandwidthUsed: 0.15 * 1e9,
+  isPlanExpired: false,
 };
 
-
 export const resetPlan = () => {
-    state.userBalance = 10;
-    state.bandwidthUsed = 0.15 * 1e9;
-    state.isPlanExpired = false;
+  state.userBalance = 10;
+  state.bandwidthUsed = 0.15 * 1e9;
+  state.isPlanExpired = false;
 };
diff --git a/lightningdev-dashboard/src/pages/api/use-plan.ts b/lightningdev-dashboard/src/pages/api/use-plan.ts
index 625d748..636604a 100644
--- a/lightningdev-dashboard/src/pages/api/use-plan.ts
+++ b/lightningdev-dashboard/src/pages/api/use-plan.ts
@@ -48,7 +48,8 @@ export default function handler(req: NextApiRequest, res: NextApiResponse) {
     if (state.userBalance <= 0 || plan.dataLeft <= 0) {
       return res.status(400).json({
         success: false,
-        message: "Insufficient balance or no data left. Please renew your plan.",
+        message:
+          "Insufficient balance or no data left. Please renew your plan.",
       });
     }
 
diff --git a/lightningdev-dashboard/src/pages/api/user-info.ts b/lightningdev-dashboard/src/pages/api/user-info.ts
index 537b6f4..53782d0 100644
--- a/lightningdev-dashboard/src/pages/api/user-info.ts
+++ b/lightningdev-dashboard/src/pages/api/user-info.ts
@@ -2,14 +2,14 @@ import { NextApiRequest, NextApiResponse } from "next";
 import { state } from "./state";
 
 export default function handler(req: NextApiRequest, res: NextApiResponse) {
-    res.status(200).json({
-        username: "testUser",
-        bandwidthUsed: state.isPlanExpired ? 0 : state.bandwidthUsed,
-        balance: state.isPlanExpired ? 0 : state.userBalance,
-    });
+  res.status(200).json({
+    username: "testUser",
+    bandwidthUsed: state.isPlanExpired ? 0 : state.bandwidthUsed,
+    balance: state.isPlanExpired ? 0 : state.userBalance,
+  });
 
-    // Automatically mark the plan as expired if both balance and bandwidth are zero
-    if (state.userBalance === 0 && state.bandwidthUsed === 0) {
-        state.isPlanExpired = true;
-    }
+  // Automatically mark the plan as expired if both balance and bandwidth are zero
+  if (state.userBalance === 0 && state.bandwidthUsed === 0) {
+    state.isPlanExpired = true;
+  }
 }
diff --git a/lightningdev-dashboard/src/pages/checkout/Checkout.css b/lightningdev-dashboard/src/pages/checkout/Checkout.css
deleted file mode 100644
index 63de118..0000000
--- a/lightningdev-dashboard/src/pages/checkout/Checkout.css
+++ /dev/null
@@ -1,29 +0,0 @@
-.checkout-container {
-    max-width: 600px;
-    margin: 20px auto;
-    padding: 20px;
-    border: 1px solid #ddd;
-    border-radius: 8px;
-    background: #fff;
-  }
-  
-  .plan-details {
-    margin-bottom: 20px;
-  }
-  
-  .plan-details h4 {
-    font-size: 1.5rem;
-    color: #333;
-  }
-  
-  .plan-details p {
-    margin: 8px 0;
-    color: #555;
-  }
-  
-  button {
-    width: 100%;
-    padding: 10px;
-    margin-top: 10px;
-  }
-  
\ No newline at end of file
diff --git a/lightningdev-dashboard/src/pages/checkout/index.tsx b/lightningdev-dashboard/src/pages/checkout/index.tsx
index a2f27f0..bc32932 100644
--- a/lightningdev-dashboard/src/pages/checkout/index.tsx
+++ b/lightningdev-dashboard/src/pages/checkout/index.tsx
@@ -1,45 +1,7 @@
-import { useRouter } from "next/router";
-import React from "react";
-import Layout from "../../components/Layout/Layout";
-import "./Checkout.css";
+import CheckoutPage from "@/src/components/Pages/checkout/Checkout";
 
-const Checkout: React.FC = () => {
-  const router = useRouter();
-  const { name, bandwidth, price, duration, threads } = router.query;
-
-  const handlePay = () => {
-    // Add payment logic here
-    console.log("Payment initiated for", name);
-  };
-
-  return (
-    <Layout>
-      <div className="checkout-container">
-        <h3>Checkout</h3>
-        <p>Proceed to pay for your selected plan</p>
-        <div className="plan-details">
-          <h4>{name}</h4>
-          <p>
-            <strong>Bandwidth:</strong> {bandwidth} GB
-          </p>
-          <p>
-            <strong>Duration:</strong> {duration}
-          </p>
-          <p>
-            <strong>Threads:</strong> {threads}
-          </p>
-          <p>
-            <strong>Price:</strong> ${price}
-          </p>
-        </div>
-        <input type="text" placeholder="Enter coupon code" />
-        <button className="btn btn-secondary">Apply</button>
-        <button className="btn btn-primary mt-3" onClick={handlePay}>
-          Pay ${price}
-        </button>
-      </div>
-    </Layout>
-  );
+const Index = () => {
+  return <CheckoutPage />;
 };
 
-export default Checkout;
+export default Index;
diff --git a/lightningdev-dashboard/src/pages/deposit-balance/index.tsx b/lightningdev-dashboard/src/pages/deposit-balance/index.tsx
index b799fe0..48fd587 100644
--- a/lightningdev-dashboard/src/pages/deposit-balance/index.tsx
+++ b/lightningdev-dashboard/src/pages/deposit-balance/index.tsx
@@ -1,12 +1,12 @@
 import React from "react";
-import Layout from "../../components/Layout/Layout";
+import DashboardLayout from "../../components/DashboardLayout/DashboardLayout";
 import DepositBalance from "../../components/DepositBalance/DepositBalance";
 
 const DepositBalancePage: React.FC = () => {
   return (
-    <Layout>
+    <DashboardLayout>
       <DepositBalance />
-    </Layout>
+    </DashboardLayout>
   );
 };
 
diff --git a/lightningdev-dashboard/src/pages/generate-proxy/GenerateProxy.css b/lightningdev-dashboard/src/pages/generate-proxy/GenerateProxy.css
deleted file mode 100644
index 93151de..0000000
--- a/lightningdev-dashboard/src/pages/generate-proxy/GenerateProxy.css
+++ /dev/null
@@ -1,70 +0,0 @@
-/* src/pages/generate-proxy/GenerateProxy.css */
-
-.generate-proxy {
-    padding: 20px;
-    background-color: #f8f9fa;
-  }
-  
-  .generate-proxy .header {
-    display: flex;
-    justify-content: space-between;
-    align-items: center;
-    margin-bottom: 20px;
-  }
-  
-  .generate-proxy .header h3 {
-    font-size: 1.5rem;
-    font-weight: bold;
-  }
-  
-  .generate-proxy .header button {
-    padding: 10px 15px;
-    font-size: 1rem;
-    color: white;
-    background-color: #007bff;
-    border: none;
-    border-radius: 5px;
-    cursor: pointer;
-  }
-  
-  .generate-proxy .header button:hover {
-    background-color: #0056b3;
-  }
-  
-  .generate-proxy .content {
-    display: flex;
-    gap: 20px;
-  }
-  
-  .generate-proxy .left-section,
-  .generate-proxy .right-section {
-    flex: 1;
-    padding: 15px;
-    border: 1px solid #ddd;
-    border-radius: 5px;
-    background-color: white;
-  }
-  
-  .generate-proxy .right-section {
-    display: flex;
-    flex-direction: column;
-  }
-  
-  .generate-proxy .chart {
-    margin-top: 20px;
-  }
-  
-  .generate-proxy button.primary {
-    margin-top: 10px;
-    padding: 10px 15px;
-    color: white;
-    background-color: #007bff;
-    border: none;
-    border-radius: 5px;
-    cursor: pointer;
-  }
-  
-  .generate-proxy button.primary:hover {
-    background-color: #0056b3;
-  }
-  
\ No newline at end of file
diff --git a/lightningdev-dashboard/src/pages/generate-proxy/index.tsx b/lightningdev-dashboard/src/pages/generate-proxy/index.tsx
index ac78129..69fed9b 100644
--- a/lightningdev-dashboard/src/pages/generate-proxy/index.tsx
+++ b/lightningdev-dashboard/src/pages/generate-proxy/index.tsx
@@ -1,28 +1,7 @@
-import React from "react";
-import Layout from "../../components/Layout/Layout";
-import ConfigureProxy from "../../components/ConfigureProxy";
-import ProxyDetails from "../../components/ProxyDetails";
-import ProxyHeader from "../../components/ProxyHeader";
+import GenerateProxyPage from "@/src/components/Pages/generate-proxy/GenerateProxy";
 
-const GenerateProxy: React.FC = () => {
-  const planDetails = {
-    planId: "672576d20a6c581e87249045",
-    currentPlan: "Residential 5GB",
-    planExpiry: "31 Jun 2025 03:52",
-    totalBandwidth: 5,
-    usedBandwidth: 1.2,
-    remainingBandwidth: 3.8,
-  };
-
-  return (
-    <Layout>
-      <div className="generate-proxy-container">
-        <ProxyHeader {...planDetails} />
-        <ConfigureProxy />
-        <ProxyDetails />
-      </div>
-    </Layout>
-  );
+const Index = () => {
+  return <GenerateProxyPage />;
 };
 
-export default GenerateProxy;
+export default Index;
diff --git a/lightningdev-dashboard/src/pages/index.tsx b/lightningdev-dashboard/src/pages/index.tsx
index ccaf693..076ba2f 100644
--- a/lightningdev-dashboard/src/pages/index.tsx
+++ b/lightningdev-dashboard/src/pages/index.tsx
@@ -1,107 +1,7 @@
-import React, { useState, useEffect } from "react";
-import Sidebar from "../components/Sidebar/Sidebar";
-import Navbar from "../components/Navbar/Navbar";
-import CardsSection from "../components/CardsSection/CardsSection";
-import PlanSection from "../components/PlanSection/PlanSection";
-import Footer from "../components/Footer/Footer";
-import axios from "axios";
+import DashboardPage from "../components/Pages/dashboard/Dashboard";
 
-const Dashboard: React.FC = () => {
-  const [userInfo, setUserInfo] = useState({
-    balance: 0,
-    activePlans: 0,
-    dataLeft: 0,
-    totalDataPurchased: 0,
-    username: "Loading...",
-    userId: "",
-  });
-
-  // Fetch user info
-  const fetchUserInfo = async () => {
-    try {
-      const response = await axios.get("/api/user-info");
-      console.log("Fetched user info after renew/add:", response.data); // Debugging log
-      setUserInfo({
-        balance: response.data.balance || 0,
-        activePlans: response.data.activePlans || 0,
-        dataLeft: response.data.dataLeft || 0,
-        totalDataPurchased: response.data.totalDataPurchased || 0,
-        username: response.data.username || "Guest",
-        userId: response.data.userId || "",
-      });
-    } catch (error) {
-      console.error("Error fetching user info:", error);
-    }
-  };
-  
-
-  // Add balance
-  const renewPlan = async () => {
-    console.log("Renew Plan button clicked"); 
-    try {
-      const response = await axios.post("/api/renew-plan");
-      console.log("Renew Plan Response:", response.data); 
-      if (response.data.success) {
-        await fetchUserInfo(); // Refresh state
-      } else {
-        console.error("Failed to renew plan:", response.data.message);
-      }
-    } catch (error) {
-      console.error("Error renewing plan:", error);
-    }
-  };
-  
-  const addBalance = async () => {
-    console.log("Add Balance button clicked"); // Debugging log
-    try {
-      const response = await axios.post("/api/add-balance", { amount: 10 });
-      console.log("Add Balance Response:", response.data); // Debugging log
-      if (response.data.success) {
-        await fetchUserInfo(); // Refresh state
-      } else {
-        console.error("Failed to add balance:", response.data.message);
-      }
-    } catch (error) {
-      console.error("Error adding balance:", error);
-    }
-  };
-  
-
-  // Fetch user info on component mount
-  useEffect(() => {
-    fetchUserInfo();
-  }, []);
-
-  return (
-    <div className="dashboard-layout">
-      {/* Sidebar */}
-      <Sidebar />
-
-      {/* Right Section */}
-      <div className="dashboard-right-section">
-        {/* Navbar */}
-        <Navbar />
-
-        {/* Main Content */}
-        <div className="dashboard-content">
-        <CardsSection
-  addBalance={addBalance}
-  renewPlan={renewPlan}
-  fetchUserInfo={fetchUserInfo}
-  balance={userInfo.balance}
-  activePlans={userInfo.activePlans}
-  dataLeft={userInfo.dataLeft}
-  totalDataPurchased={userInfo.totalDataPurchased}
-  username={userInfo.username}
-  userId={userInfo.userId}
-/>
-
-          <PlanSection />
-          <Footer />
-        </div>
-      </div>
-    </div>
-  );
+const Index = () => {
+  return <DashboardPage />;
 };
 
-export default Dashboard;
+export default Index;
diff --git a/lightningdev-dashboard/src/pages/invoices/Invoices.css b/lightningdev-dashboard/src/pages/invoices/Invoices.css
deleted file mode 100644
index 9f06175..0000000
--- a/lightningdev-dashboard/src/pages/invoices/Invoices.css
+++ /dev/null
@@ -1,97 +0,0 @@
-.invoices-container {
-  margin-top: 20px;
-}
-
-.header h4 {
-  font-size: 20px;
-  font-weight: bold;
-}
-
-.header p {
-  font-size: 14px;
-  color: #6c757d;
-}
-
-.controls {
-  border-radius: 10px;
-}
-
-.search-bar input {
-  border: none;
-  outline: none;
-  background: #f8f9fa;
-  border-radius: 10px;
-  padding: 8px 12px;
-  width: 300px;
-}
-
-.filter-buttons .sort-label {
-  font-size: 14px;
-  color: #6c757d;
-}
-
-.filter-buttons .chip-btn {
-  background: #f8f9fa;
-  border: none;
-  color: #6c757d;
-  border-radius: 20px;
-  padding: 6px 12px;
-  cursor: pointer;
-}
-
-.filter-buttons .chip-btn.chip-active {
-  background: #007bff;
-  color: #fff;
-}
-
-.filter-buttons .chip-red {
-  background: #f8d7da;
-  color: #dc3545;
-}
-
-.filter-buttons .chip-red.chip-active {
-  background: #dc3545;
-  color: white;
-}
-
-.filter-buttons .chip-green {
-  background: #d4edda;
-  color: #28a745;
-}
-
-.filter-buttons .chip-green.chip-active {
-  background: #28a745;
-  color: white;
-}
-
-.table-container {
-  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
-}
-
-.table th,
-.table td {
-  vertical-align: middle;
-  font-size: 14px;
-}
-
-.chip {
-  padding: 5px 10px;
-  font-size: 12px;
-  border-radius: 15px;
-  display: inline-block;
-}
-
-.chip-primary {
-  background: #007bff;
-  color: white;
-}
-
-.chip-success {
-  background: #28a745;
-  color: white;
-}
-
-.chip-danger {
-  background: #dc3545;
-  color: white;
-}
diff --git a/lightningdev-dashboard/src/pages/invoices/index.tsx b/lightningdev-dashboard/src/pages/invoices/index.tsx
index ba6abf2..061bc97 100644
--- a/lightningdev-dashboard/src/pages/invoices/index.tsx
+++ b/lightningdev-dashboard/src/pages/invoices/index.tsx
@@ -1,158 +1,7 @@
-import React, { useState, useEffect } from "react";
-import Layout from "../../components/Layout/Layout";
-import { FaSearch } from "react-icons/fa";
-import "./Invoices.css";
+import InvoicesPage from "@/src/components/Pages/invoices/Invoices";
 
-type Invoice = {
-  id: string;
-  plan: string;
-  status: string; // "Ends in X days"
-  type: string;
-  paymentStatus: string; // "Paid" or "Unpaid"
-  amount: number;
-  bandwidth: string; // e.g., "0.15 GB"
+const Index = () => {
+  return <InvoicesPage />;
 };
 
-const Invoices: React.FC = () => {
-  const [invoices, setInvoices] = useState<Invoice[]>([]);
-  const [filteredInvoices, setFilteredInvoices] = useState<Invoice[]>([]);
-  const [search, setSearch] = useState<string>("");
-  const [filter, setFilter] = useState<"All" | "Paid" | "Unpaid">("All");
-
-  useEffect(() => {
-    const fetchInvoices = async () => {
-      const mockInvoices: Invoice[] = [
-        {
-          id: "674cb0b5f674e52455084591",
-          plan: "[Trial] Trial-Residential-Plan 0.15 GB",
-          status: "Ends in 25 days",
-          type: "Residential",
-          paymentStatus: "Paid",
-          amount: 0.0,
-          bandwidth: "0.15 GB",
-        },
-      ];
-      setInvoices(mockInvoices);
-      setFilteredInvoices(mockInvoices);
-    };
-
-    fetchInvoices();
-  }, []);
-
-  useEffect(() => {
-    let result = invoices;
-
-    if (search) {
-      result = result.filter((invoice) =>
-        invoice.id.toLowerCase().includes(search.toLowerCase())
-      );
-    }
-
-    if (filter !== "All") {
-      result = result.filter((invoice) => invoice.paymentStatus === filter);
-    }
-
-    setFilteredInvoices(result);
-  }, [search, filter, invoices]);
-
-  return (
-    <Layout>
-      <div className="invoices-container">
-        <div className="header d-flex justify-content-between align-items-center mb-3">
-          <div>
-            <h4>Your Invoices</h4>
-            <p className="text-muted">Detailed list of all your invoices</p>
-          </div>
-          <a href="/support" className="btn btn-primary">
-            Contact Us
-          </a>
-        </div>
-
-        {/* Search and Filter Section */}
-        <div className="controls bg-white p-3 d-flex justify-content-between align-items-center">
-          <div className="search-bar d-flex align-items-center">
-            <FaSearch className="me-2 text-muted" />
-            <input
-              type="text"
-              className="form-control"
-              placeholder="Search your invoices"
-              value={search}
-              onChange={(e) => setSearch(e.target.value)}
-            />
-          </div>
-          <div className="filter-buttons d-flex align-items-center">
-            <span className="sort-label me-2">Sort by Payment:</span>
-            <button
-              className={`chip-btn chip-red me-2 ${
-                filter === "Unpaid" ? "chip-active" : ""
-              }`}
-              onClick={() => setFilter("Unpaid")}
-            >
-              .Unpaid
-            </button>
-            <button
-              className={`chip-btn chip-green ${
-                filter === "Paid" ? "chip-active" : ""
-              }`}
-              onClick={() => setFilter("Paid")}
-            >
-             . Paid
-            </button>
-          </div>
-        </div>
-
-        {/* Invoices Table */}
-        <div className="table-container bg-white mt-3 p-3 rounded">
-          <table className="table">
-            <thead>
-              <tr>
-                <th>Invoice ID</th>
-                <th>Plan</th>
-                <th>Status</th>
-                <th>Type</th>
-                <th>Payment Status</th>
-                <th>Amount</th>
-                <th>Bandwidth</th>
-              </tr>
-            </thead>
-            <tbody>
-              {filteredInvoices.length > 0 ? (
-                filteredInvoices.map((invoice) => (
-                  <tr key={invoice.id}>
-                    <td>{invoice.id}</td>
-                    <td>{invoice.plan}</td>
-                    <td>
-                      <span className="chip chip-primary">{invoice.status}</span>
-                    </td>
-                    <td>{invoice.type}</td>
-                    <td>
-                      <span
-                        className={`chip ${
-                          invoice.paymentStatus === "Paid"
-                            ? "chip-success"
-                            : "chip-danger"
-                        }`}
-                      >
-                        {invoice.paymentStatus}
-                      </span>
-                    </td>
-                    <td>${invoice.amount.toFixed(2)}</td>
-                    <td>{invoice.bandwidth}</td>
-                  </tr>
-                ))
-              ) : (
-                <tr>
-                  <td colSpan={7} className="text-center">
-                    No invoices found.
-                  </td>
-                </tr>
-              )}
-            </tbody>
-          </table>
-        </div>
-      </div>
-    </Layout>
-  );
-};
-
-export default Invoices;
+export default Index;
diff --git a/lightningdev-dashboard/src/pages/purchase-plan/PurchasePlan.css b/lightningdev-dashboard/src/pages/purchase-plan/PurchasePlan.css
deleted file mode 100644
index 77a0457..0000000
--- a/lightningdev-dashboard/src/pages/purchase-plan/PurchasePlan.css
+++ /dev/null
@@ -1,88 +0,0 @@
-.purchase-plan-page {
-  padding: 20px;
-  background-color: #f9fafe;
-}
-
-.header {
-  border-bottom: 1px solid #eaecef;
-  padding-bottom: 10px;
-}
-
-.header .tabs {
-  display: flex;
-  gap: 10px;
-}
-
-.header .btn {
-  font-size: 0.875rem;
-  font-weight: 500;
-  padding: 6px 12px;
-}
-
-.row {
-  display: flex;
-  flex-wrap: wrap;
-  gap: 20px;
-  justify-content: center; 
-}
-
-.plan-card {
-  background-color: white;
-  border: 1px solid #eaecef;
-  border-radius: 8px;
-  padding: 20px;
-  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
-  transition: transform 0.3s ease;
-  flex: 1 1 calc(25% - 20px); 
-  max-width: 300px; 
-}
-
-.plan-card:hover {
-  transform: scale(1.05);
-}
-
-.plan-card h5 {
-  font-size: 1.25rem;
-  font-weight: 600;
-}
-
-.plan-card .plan-price {
-  font-size: 1.125rem;
-  font-weight: 500;
-  color: #007bff;
-  margin-bottom: 15px;
-}
-
-.plan-card .plan-details {
-  margin: 10px 0;
-  padding-left: 20px;
-}
-
-.plan-card .plan-details li {
-  font-size: 0.9rem;
-  margin-bottom: 5px;
-}
-
-.plan-card .purchase-btn {
-  width: 100%;
-  font-weight: 500;
-  margin-top: 15px;
-}
-
-@media (max-width: 1024px) {
-  .plan-card {
-    flex: 1 1 calc(20% - 10px); /* Three cards per row on medium screens */
-  }
-}
-
-@media (max-width: 768px) {
-  .plan-card {
-    flex: 1 1 calc(50% - 20px); /* Two cards per row on small screens */
-  }
-}
-
-@media (max-width: 576px) {
-  .plan-card {
-    flex: 1 1 100%; /* One card per row on extra-small screens */
-  }
-}
diff --git a/lightningdev-dashboard/src/pages/purchase-plan/index.tsx b/lightningdev-dashboard/src/pages/purchase-plan/index.tsx
index d738e0b..437657c 100644
--- a/lightningdev-dashboard/src/pages/purchase-plan/index.tsx
+++ b/lightningdev-dashboard/src/pages/purchase-plan/index.tsx
@@ -1,67 +1,7 @@
-import React, { useState } from "react";
-import Layout from "../../components/Layout/Layout"; // Adjust path if needed
-import PlanCard from "../../components/PlanCard"; // Adjust path if needed
-import "./PurchasePlan.css";
+import PurchasePlanPage from "@/src/components/Pages/purchase-plan/PurchasePlan";
 
-const residentialPlans = [
-  { title: "Residential 1GB", price: "$4.50", details: ["10M+ Real Residential Peers", "IP & User:Pass Authentication", "Country, State, City & ISP Targeting", "Rotating & Sticky Sessions", "Unlimited Concurrent Connections", "HTTP/SOCKS5 Protocol Supported"] },
-  { title: "Residential 5GB", price: "$20.00", details: ["10M+ Real Residential Peers", "IP & User:Pass Authentication", "Country, State, City & ISP Targeting", "Rotating & Sticky Sessions", "Unlimited Concurrent Connections", "HTTP/SOCKS5 Protocol Supported"] },
-];
-
-const bandwidthPlans = [
-  { title: "Residential Day", price: "$300.00", details: ["2M+ Real Residential Peers", "IP & User:Pass Authentication", "Continent Targeting", "Rotating & Sticky Sessions", "Unlimited Bandwidth", "Unlimited Concurrent Connections", "HTTP/SOCKS5 Protocol Supported"] },
-  { title: "Residential Week", price: "$1100.00", details: ["2M+ Real Residential Peers", "IP & User:Pass Authentication", "Continent Targeting", "Rotating & Sticky Sessions", "Unlimited Bandwidth", "Unlimited Concurrent Connections", "HTTP/SOCKS5 Protocol Supported"] },
-];
-
-const PurchasePlan: React.FC = () => {
-  const [activeTab, setActiveTab] = useState<"Residential" | "Bandwidth">("Residential");
-
-  const handlePurchase = (planTitle: string) => {
-    console.log(`Purchased plan: ${planTitle}`);
-    alert(`You have purchased the ${planTitle}`);
-  };
-
-  const renderCards = (plans: { title: string; price: string; details: string[] }[] ) => {
-    return plans.map((plan, index) => (
-      <div key={index} className="col-12 col-sm-6 col-md-4 col-lg-3">
-        <PlanCard
-          title={plan.title}
-          price={plan.price}
-          details={plan.details}
-          onPurchase={() => handlePurchase(plan.title)}
-        />
-      </div>
-    ));
-  };
-
-  return (
-    <Layout>
-      <div className="purchase-plan-page">
-        <div className="header d-flex justify-content-between align-items-center">
-          <h4>Purchase Plan</h4>
-          <div className="tabs">
-            <button
-              className={`btn ${activeTab === "Residential" ? "btn-primary" : "btn-outline-primary"}`}
-              onClick={() => setActiveTab("Residential")}
-            >
-              Residential
-            </button>
-            <button
-              className={`btn ${activeTab === "Bandwidth" ? "btn-primary" : "btn-outline-primary"}`}
-              onClick={() => setActiveTab("Bandwidth")}
-            >
-              Bandwidth
-            </button>
-          </div>
-        </div>
-        <div className="row mt-4">
-  {activeTab === "Residential" && renderCards(residentialPlans)}
-  {activeTab === "Bandwidth" && renderCards(bandwidthPlans)}
-</div>
-
-      </div>
-    </Layout>
-  );
+const Index = () => {
+  return <PurchasePlanPage />;
 };
 
-export default PurchasePlan;
+export default Index;
diff --git a/lightningdev-dashboard/src/pages/sub-users-management/SubUsersManagement.css b/lightningdev-dashboard/src/pages/sub-users-management/SubUsersManagement.css
deleted file mode 100644
index 7107107..0000000
--- a/lightningdev-dashboard/src/pages/sub-users-management/SubUsersManagement.css
+++ /dev/null
@@ -1,114 +0,0 @@
-.sub-users-management {
-    padding: 20px;
-  }
-  
-  .accordion-container {
-    padding: 20px;
-  }
-  
-  /* Tabs Section */
-  .tabs {
-    display: flex;
-    justify-content: center;
-    gap: 10px;
-    margin-bottom: 20px;
-  }
-  
-  .tabs button {
-    font-size: 14px;
-    padding: 8px 16px;
-    border-radius: 6px;
-    border: 1px solid #4562a6;
-    background-color: #f8f9fa;
-    transition: all 0.3s ease;
-    flex-shrink: 0;
-  }
-  
-  .tabs button.active {
-    background-color: #007bff;
-    color: #fff;
-    border-color: #007bff;
-  }
-  
-  .tabs button:hover {
-    background-color: #0056b3;
-    color: #fff;
-  }
-  
-  /* Form Fields */
-  .form-control {
-    max-width: 600px;
-    margin: 0 auto 15px auto;
-    padding: 10px;
-    border: 1px solid #ddd;
-    border-radius: 6px;
-    font-size: 14px;
-  }
-  
-  /* Buttons */
-  .button-group {
-    display: flex;
-    justify-content: center;
-    gap: 15px;
-    margin-top: 20px;
-    margin-left: 10px;
-  }
-  
-  .button-group button {
-    font-size: 14px;
-    padding: 8px 20px;
-    border-radius: 6px;
-    transition: all 0.3s ease;
-  }
-  
-  .button-group .btn-primary {
-    background-color: #007bff;
-    color: #fff;
-  }
-  
-  .button-group .btn-primary:hover {
-    background-color: #0056b3;
-  }
-  
-  .button-group .btn-outline-primary {
-    border: 1px solid #007bff;
-    color: #007bff;
-  }
-  
-  .button-group .btn-outline-primary:hover {
-    background-color: #007bff;
-    color: #fff;
-  }
-  
- 
-  
-
-  .create-user,
-  .delete-user,
-  .manage-user {
-    margin-top: 20px;
-  }
-  
-  .create-user label,
-  .delete-user label,
-  .manage-user label {
-    font-weight: bold;
-    margin-bottom: 5px;
-  }
-  
-  .create-user input,
-  .manage-user input {
-    width: 300px;
-  }
-  
-  .manage-user .progress-circle {
-    width: 100px;
-    height: 100px;
-    border: 5px solid #007bff;
-    border-radius: 50%;
-    display: flex;
-    justify-content: center;
-    align-items: center;
-    margin-right: 20px;
-  }
-  
\ No newline at end of file
diff --git a/lightningdev-dashboard/src/pages/sub-users-management/index.tsx b/lightningdev-dashboard/src/pages/sub-users-management/index.tsx
index 6a3d75b..0ce6b79 100644
--- a/lightningdev-dashboard/src/pages/sub-users-management/index.tsx
+++ b/lightningdev-dashboard/src/pages/sub-users-management/index.tsx
@@ -1,353 +1,7 @@
-import React, { useState } from "react";
-import Layout from "../../components/Layout/Layout";
-import {
-  addGigabytes,
-  createUserResidential,
-  removeGigabytes,
-} from "../../services/apiService";
-import "./SubUsersManagement.css";
-import toast from "react-hot-toast";
+import SubUsersManagementPage from "@/src/components/Pages/sub-users-management/SubUsersManagement";
 
-type Username = {
-  id: string;
-  name: string;
-  bandwidth: number;
-  bandwidthLeft: string;
+const Index = () => {
+  return <SubUsersManagementPage />;
 };
 
-const SubUsersManagement: React.FC = () => {
-  const [selectedPlan, setSelectedPlan] = useState<string | null>(null);
-  const [activeTab, setActiveTab] = useState<"Create" | "Delete" | "Manage" | null>(null);
-  const [customerName, setCustomerName] = useState<string>("");
-  const [proxyUsername, setProxyUsername] = useState<string>("");
-  const [proxyPassword, setProxyPassword] = useState<string>("");
-  const [loading, setLoading] = useState<boolean>(false);
-  const [usernames, setUsernames] = useState<Username[]>([]);
-  const [selectedUsername, setSelectedUsername] = useState<string>("");
-  const [gbToAdd, setGbToAdd] = useState<number>(0);
-  const [gbToRemove, setGbToRemove] = useState<number>(0);
-
-  const plans = [
-    { id: "plan1", name: "Trial-Residential-Plan 0.15 GB - 674cb0b5f674e52455084591" },
-    { id: "plan2", name: "Premium-Residential-Plan 1 GB - 8723409f674e52455083445" },
-  ];
-
-  const handleCreateUser = async () => {
-    if (!proxyUsername || !proxyPassword || !customerName) {
-      toast.error("Please fill in all required fields.");
-      return;
-    }
-
-    setLoading(true);
-
-    try {
-      const email = `${proxyUsername}@lightningproxies.net`;
-      const response = await createUserResidential(proxyUsername, email, proxyPassword);
-      console.log("Create User Response:", response);
-
-      setUsernames((prev) => [
-        ...prev,
-        {
-          id: Date.now().toString(),
-          name: proxyUsername,
-          bandwidth: 0,
-          bandwidthLeft: "0 GB",
-        },
-      ]);
-
-      toast.success(`User created successfully: ${proxyUsername}`);
-      setCustomerName("");
-      setProxyUsername("");
-      setProxyPassword("");
-    } catch (error: unknown) {
-      if (error instanceof Error) {
-        console.error("Error creating user:", error.message);
-        toast.error("Failed to create user. Please try again.");
-      }
-    } finally {
-      setLoading(false);
-    }
-  };
-
-  const handleGenerateRandom = () => {
-    const length = Math.floor(Math.random() * (15 - 6 + 1)) + 6;
-
-    const getRandomChar = (characters: string) =>
-      characters.charAt(Math.floor(Math.random() * characters.length));
-
-    const uppercase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
-    const lowercase = "abcdefghijklmnopqrstuvwxyz";
-    const digits = "0123456789";
-    const allowedSymbols = "!@#$%^&*?_";
-
-    let password = "";
-    password += getRandomChar(uppercase);
-    password += getRandomChar(lowercase);
-    password += getRandomChar(digits);
-    password += getRandomChar(allowedSymbols);
-
-    const allCharacters = uppercase + lowercase + digits + allowedSymbols;
-    while (password.length < length) {
-      password += getRandomChar(allCharacters);
-    }
-
-    password = password
-      .split("")
-      .sort(() => Math.random() - 0.5)
-      .join("");
-
-    setProxyUsername(`proxy${Math.floor(1000 + Math.random() * 9000)}`);
-    setProxyPassword(password);
-  };
-
-  const handleDeleteUser = (id: string) => {
-    setUsernames((prev) => prev.filter((user) => user.id !== id));
-    toast.success("User deleted successfully.");
-  };
-
-  const handleAddGigabytes = async () => {
-    if (!selectedUsername || gbToAdd <= 0) {
-      toast.error("Please select a username and provide a valid GB value to add.");
-      return;
-    }
-
-    setLoading(true);
-
-    try {
-      const flow = 1;
-      const response = await addGigabytes(selectedUsername, flow, gbToAdd);
-      console.log("Add Gigabytes Response:", response);
-
-      toast.success(`Successfully added ${gbToAdd} GB to ${selectedUsername}`);
-    } catch (error: unknown) {
-      if (error instanceof Error) {
-        console.error("Error in Add Gigabytes:", error.message);
-        toast.error("Failed to add gigabytes.");
-      }
-    } finally {
-      setLoading(false);
-    }
-  };
-
-  const handleRemoveGigabytes = async () => {
-    if (!selectedUsername || gbToRemove <= 0) {
-      toast.error("Please select a username and provide a valid GB value to remove.");
-      return;
-    }
-
-    setLoading(true);
-
-    try {
-      const response = await removeGigabytes(selectedUsername, gbToRemove);
-      console.log("Remove Gigabytes Response:", response);
-
-      toast.success(`Successfully removed ${gbToRemove} GB from ${selectedUsername}`);
-    } catch (error: unknown) {
-      if (error instanceof Error) {
-        console.error("Error in Remove Gigabytes:", error.message);
-        toast.error("Failed to remove gigabytes.");
-      }
-    } finally {
-      setLoading(false);
-    }
-  };
-
-  const renderContent = () => {
-    if (!selectedPlan) {
-      return (
-        <div className="card p-4 shadow-sm">
-          <p>Please select a plan to proceed.</p>
-        </div>
-      );
-    }
-    switch (activeTab) {
-      case "Create":
-        return (
-          <div className="card p-4 shadow-sm">
-            <h5>Create User</h5>
-            <div>
-              <label>Customer Name</label>
-              <input
-                type="text"
-                className="form-control mb-3"
-                placeholder="Enter customer name"
-                value={customerName}
-                onChange={(e) => setCustomerName(e.target.value)}
-              />
-              <label>Proxy Username</label>
-              <input
-                type="text"
-                className="form-control mb-3"
-                placeholder="Enter proxy username"
-                value={proxyUsername}
-                onChange={(e) => setProxyUsername(e.target.value)}
-              />
-              <label>Proxy Password</label>
-              <input
-                type="password"
-                className="form-control mb-3"
-                placeholder="Enter proxy password"
-                value={proxyPassword}
-                onChange={(e) => setProxyPassword(e.target.value)}
-              />
-              <div className="d-flex justify-content-between">
-                <button className="btn btn-primary mt-2" onClick={handleGenerateRandom}>
-                  Generate
-                </button>
-                <button
-                  className="btn btn-primary mt-2"
-                  onClick={handleCreateUser}
-                  disabled={loading}
-                >
-                  Save
-                </button>
-              </div>
-            </div>
-          </div>
-        );
-      case "Delete":
-        return (
-          <div className="card p-4 shadow-sm">
-            <h5>Delete User</h5>
-            <table className="table table-striped">
-              <thead>
-                <tr>
-                  <th>ID</th>
-                  <th>Name</th>
-                  <th>Bandwidth</th>
-                  <th>Bandwidth Left</th>
-                  <th>Action</th>
-                </tr>
-              </thead>
-              <tbody>
-                {usernames.length > 0 ? (
-                  usernames.map((user) => (
-                    <tr key={user.id}>
-                      <td>{user.id}</td>
-                      <td>{user.name}</td>
-                      <td>{user.bandwidth}</td>
-                      <td>{user.bandwidthLeft}</td>
-                      <td>
-                        <button
-                          className="btn btn-danger"
-                          onClick={() => handleDeleteUser(user.id)}
-                        >
-                          Delete
-                        </button>
-                      </td>
-                    </tr>
-                  ))
-                ) : (
-                  <tr>
-                    <td colSpan={5} className="text-center">
-                      No users available.
-                    </td>
-                  </tr>
-                )}
-              </tbody>
-            </table>
-          </div>
-        );
-      case "Manage":
-        return (
-          <div className="card p-4 shadow-sm">
-            <h5>Manage User</h5>
-            <div>
-              <label>Select Username</label>
-              <select
-                className="form-control mb-3"
-                value={selectedUsername}
-                onChange={(e) => setSelectedUsername(e.target.value)}
-              >
-                <option value="">Select a user</option>
-                {usernames.map((user) => (
-                  <option key={user.id} value={user.name}>
-                    {user.name}
-                  </option>
-                ))}
-              </select>
-              <label>GB to Add</label>
-              <input
-                type="number"
-                className="form-control mb-3"
-                placeholder="Enter GB to add"
-                value={gbToAdd}
-                onChange={(e) => setGbToAdd(Number(e.target.value))}
-              />
-              <label>GB to Remove</label>
-              <input
-                type="number"
-                className="form-control mb-3"
-                placeholder="Enter GB to remove"
-                value={gbToRemove}
-                onChange={(e) => setGbToRemove(Number(e.target.value))}
-              />
-              <button className="btn btn-primary" onClick={handleAddGigabytes} disabled={loading}>
-                {loading ? "Adding..." : "Add Gigabytes"}
-              </button>
-              <button
-                className="btn btn-danger ml-3"
-                onClick={handleRemoveGigabytes}
-                disabled={loading}
-              >
-                {loading ? "Removing..." : "Remove Gigabytes"}
-              </button>
-            </div>
-          </div>
-        );
-      default:
-        return null;
-    }
-  };
-
-  return (
-    <Layout>
-      <div className="container">
-        <div className="header mb-4">
-          <h5>Sub-users management</h5>
-          <p>Empower your team efficiency with seamless sub-user management.</p>
-        </div>
-        <div className="card p-4 shadow-sm">
-          <div className="mb-3">
-            <select
-              className="form-select"
-              onChange={(e) => setSelectedPlan(e.target.value)}
-            >
-              <option value="">Select a plan</option>
-              {plans.map((plan) => (
-                <option key={plan.id} value={plan.id}>
-                  {plan.name}
-                </option>
-              ))}
-            </select>
-          </div>
-          <div className="accordion-container">
-            <div className="tabs">
-              <button
-                className={`btn ${activeTab === "Create" ? "active" : ""}`}
-                onClick={() => setActiveTab("Create")}
-              >
-                Create User
-              </button>
-              <button
-                className={`btn ${activeTab === "Delete" ? "active" : ""}`}
-                onClick={() => setActiveTab("Delete")}
-              >
-                Delete User
-              </button>
-              <button
-                className={`btn ${activeTab === "Manage" ? "active" : ""}`}
-                onClick={() => setActiveTab("Manage")}
-              >
-                Manage User
-              </button>
-            </div>
-          </div>
-        </div>
-        <div className="mt-4">{renderContent()}</div>
-      </div>
-    </Layout>
-  );
-};
-
-export default SubUsersManagement;
+export default Index;
diff --git a/lightningdev-dashboard/src/services/apiService.ts b/lightningdev-dashboard/src/services/apiService.ts
index 05cd22a..d8f785f 100644
--- a/lightningdev-dashboard/src/services/apiService.ts
+++ b/lightningdev-dashboard/src/services/apiService.ts
@@ -11,7 +11,7 @@ const BASE_URL = "https://developer-tester.lightningproxies.net/api";
 export const createUserResidential = async (
   username: string,
   email: string,
-  password: string
+  password: string,
 ): Promise<unknown> => {
   try {
     const response = await axios.post(
@@ -27,14 +27,14 @@ export const createUserResidential = async (
           "Content-Type": "application/json",
           "api-key": API_KEY,
         },
-      }
+      },
     );
     return response.data;
   } catch (error) {
     if (axios.isAxiosError(error)) {
       console.error(
         "Error creating user:",
-        error.response ? error.response.data : error.message
+        error.response ? error.response.data : error.message,
       );
     } else {
       console.error("Unexpected error:", error);
@@ -47,7 +47,7 @@ export const createUserResidential = async (
 export const addGigabytes = async (
   username: string,
   flow: number,
-  duration: number
+  duration: number,
 ): Promise<unknown> => {
   if (![1, 2].includes(flow) || duration !== 3) {
     throw new Error("Invalid flow or duration value");
@@ -66,14 +66,14 @@ export const addGigabytes = async (
           "Content-Type": "application/json",
           "api-key": API_KEY,
         },
-      }
+      },
     );
     return response.data;
   } catch (error) {
     if (axios.isAxiosError(error)) {
       console.error(
         "Error adding gigabytes:",
-        error.response ? error.response.data : error.message
+        error.response ? error.response.data : error.message,
       );
     } else {
       console.error("Unexpected error:", error);
@@ -85,7 +85,7 @@ export const addGigabytes = async (
 // Remove Gigabytes
 export const removeGigabytes = async (
   username: string,
-  gigabytes: number
+  gigabytes: number,
 ): Promise<unknown> => {
   try {
     const response = await axios.post(
@@ -99,14 +99,14 @@ export const removeGigabytes = async (
           "Content-Type": "application/json",
           "api-key": API_KEY,
         },
-      }
+      },
     );
     return response.data;
   } catch (error) {
     if (axios.isAxiosError(error)) {
       console.error(
         "Error removing gigabytes:",
-        error.response ? error.response.data : error.message
+        error.response ? error.response.data : error.message,
       );
     } else {
       console.error("Unexpected error:", error);
@@ -123,10 +123,12 @@ export const proxyListCreateResidential = async (
   time?: number,
   countryCode?: string,
   state?: string,
-  city?: string
+  city?: string,
 ): Promise<unknown> => {
   if (type === "sticky" && (!time || time < 1 || time > 120)) {
-    throw new Error("Invalid session time for 'sticky' type. Must be between 1 and 120.");
+    throw new Error(
+      "Invalid session time for 'sticky' type. Must be between 1 and 120.",
+    );
   }
 
   try {
@@ -146,14 +148,14 @@ export const proxyListCreateResidential = async (
           "Content-Type": "application/json",
           "api-key": API_KEY,
         },
-      }
+      },
     );
     return response.data;
   } catch (error) {
     if (axios.isAxiosError(error)) {
       console.error(
         "Error creating proxy list:",
-        error.response ? error.response.data : error.message
+        error.response ? error.response.data : error.message,
       );
     } else {
       console.error("Unexpected error:", error);
@@ -167,7 +169,7 @@ export const createProxyUserResidential = async (
   account: string,
   password: string,
   limitFlow: "1" | "2",
-  username: string
+  username: string,
 ): Promise<unknown> => {
   try {
     const response = await axios.post(
@@ -183,14 +185,14 @@ export const createProxyUserResidential = async (
           "Content-Type": "application/json",
           "api-key": API_KEY,
         },
-      }
+      },
     );
     return response.data;
   } catch (error) {
     if (axios.isAxiosError(error)) {
       console.error(
         "Error creating proxy user:",
-        error.response ? error.response.data : error.message
+        error.response ? error.response.data : error.message,
       );
     } else {
       console.error("Unexpected error:", error);
diff --git a/lightningdev-dashboard/src/styles/dashboard.css b/lightningdev-dashboard/src/styles/dashboard.css
deleted file mode 100644
index 2ec5436..0000000
--- a/lightningdev-dashboard/src/styles/dashboard.css
+++ /dev/null
@@ -1,36 +0,0 @@
-.dashboard-layout {
-    display: flex; /* Flex container for sidebar and right section */
-    min-height: 100vh; /* Full viewport height */
-    background-color: #F5F6F9; /* Light background */
-  }
-  
-  .sidebar {
-    position: fixed;
-    top: 0;
-    left: 0;
-    width: 250px; /* Adjust if Sidebar width changes */
-    height: 100vh;
-    background-color: #343a40; /* Dark background */
-    color: #ffffff;
-    overflow-y: auto;
-    z-index: 1100;
-    padding-top: 60px; /* Match the height of the Navbar */
-  }
-  
-  
-  .dashboard-right-section {
-    width: 75%;
-    margin: 20px 40px;
-    display: flex;
-    flex-direction: column; /* Stack Navbar and Content vertically */
-    flex-grow: 1; /* Take up remaining space */
-  }
-  
-  
-  .dashboard-content {
-    margin-top: 50px;
-    padding: 20px; /* Padding for spacing */
-    background-color: #F5F6F9; /* Content background */
-    overflow-y: auto; /* Scrollable if content exceeds height */
-  }
-  
\ No newline at end of file
diff --git a/lightningdev-dashboard/src/styles/globals.css b/lightningdev-dashboard/src/styles/globals.css
index 10d1b3a..c0dca8c 100644
--- a/lightningdev-dashboard/src/styles/globals.css
+++ b/lightningdev-dashboard/src/styles/globals.css
@@ -1,4 +1,2 @@
-@import url('https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css');
+@import url("https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css");
 @import "@fortawesome/fontawesome-free/css/all.min.css";
-
-
diff --git a/lightningdev-dashboard/src/types/index.d.ts b/lightningdev-dashboard/src/types/index.d.ts
index 2796f8f..6370e3c 100644
--- a/lightningdev-dashboard/src/types/index.d.ts
+++ b/lightningdev-dashboard/src/types/index.d.ts
@@ -1,13 +1,13 @@
 export type UserInfo = {
-    username: string;
-    bandwidthUsed: number; // in bytes
-    balance: number;       // in GB
+  username: string;
+  bandwidthUsed: number; // in bytes
+  balance: number; // in GB
 };
 
 export type ProxyList = {
-    countryCodes: string[];
-    zones: {
-        static: string[];
-        dynamic: string[];
-    };
+  countryCodes: string[];
+  zones: {
+    static: string[];
+    dynamic: string[];
+  };
 };
diff --git a/lightningdev-dashboard/src/types/index.ts b/lightningdev-dashboard/src/types/index.ts
index 7f7aa5a..88aaef7 100644
--- a/lightningdev-dashboard/src/types/index.ts
+++ b/lightningdev-dashboard/src/types/index.ts
@@ -1,8 +1,7 @@
 export type Plan = {
-    name: string;
-    bandwidth: number; // in GB
-    price: number; // in dollars
-    duration: string; // e.g., "3 Months"
-    threads: string; // e.g., "Unlimited"
-  };
-  
\ No newline at end of file
+  name: string;
+  bandwidth: number; // in GB
+  price: number; // in dollars
+  duration: string; // e.g., "3 Months"
+  threads: string; // e.g., "Unlimited"
+};
